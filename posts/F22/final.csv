post_id|subject|content|unique_views|good_question|visibility|i_answer|s_answer|num_followups
lbidmth31xe6h2|Final Exam Review Live Session|Hi everyone! Staff will be hosting a Final Exam Review Live Session over Zoom this Monday, 12/12 from 8pm-10pm to help you prepare for your final exam. We'll be going over the answers to a worksheet and taking any questions you might have (time permitting). As always, the session will be recorded and uploaded on Piazza/the website afterward.. . Worksheet: https://docs.google.com/document/d/1dQcspxxD_MdgMDuZyzBoP8nlOLxcwEG7MeM2ZjsZY3E/edit . Slides: https://docs.google.com/presentation/d/18sx1zHq2o-CmYcc_xWLVmAVyBxN0bdDLJl9f1vtLGcc/edit#slide=id.p. Zoom link: https://umich.zoom.us/j/96516940215. . See you there, and good luck with your studying!. . #pin|750|0|active|||1
lbcet4eawmp15f|Final Exam Logistics|"Hi everyone! The mid-term exam is coming up. Here’s some key information.. . Where To Take The Exam. You have three options for taking the exam:. . On a personal laptop, remotely from a location of your choice.. . On a personal laptop, in a North Campus classroom with power outlets at each seat.. . On a CAEN lab computer, in a North Campus computer lab. (This option is only available to students who do not have access to an adequate personal laptop.). . If you would like to or feel that you need to take your exam in a classroom or CAEN lab please fill out the form below so that we can make sure that we have enough space. We will email you the room location confirmation before the exam. If you do not want us to reserve a space for you to take the exam, you don't need to fill out this form.. . Exam Room Registration. . If you have any questions please email eecs280exams@umich.edu. --EECS 280 Exam Team. . When To Take The Exam. . At the regular time, unless you have made arrangements with us to take the exam at an alternate time.. . If you have an extended time accommodation through the SSD office, your electronic exam and deadline on Canvas will be configured accordingly.. . Exam Format. . The exam is administered online; you take it in your web browser.. The exam is ""open everything"". You may use any resources, including online resources. You may not collaborate with others.. You’ve got two hours to take the exam. Turn in your answers to Canvas before time is up.. . Each student receives a random set of questions drawn from a large question bank.. . Each student’s exam is “individually curved”. If you happen to get a harder set of questions, you’ll have a more generous curve.. . How To Take The Exam. . An individualized exam link is emailed to you a couple days before the exam. When the exam starts, you can access your exam through that link (before the start of the exam, you’ll get a “404 not found” error for the link).. . You take the exam in your web browser.. . When you finish, click a button to download an answers file, which you must submit to Canvas before time is up.. . Exam Coverage. The final exam focuses on material from lectures 11-22 (Container ADTs through the end of the course).The exam is focused on the 2nd half of the course material and is not explicitly cumulative. However, topics from the 2nd half of the course often build on material we first covered earlier (e.g. pointers are used in linked lists).. Live Practice Exam. Your link for the live practice exam will be emailed Wednesday 12/7 with subject line ""EECS 280 F22 Live Practice Final Exam"". This practice exam is hosted using the same system as we will use for the real exam, and we highly recommend you take a chance to get familiar with it and with the question formats.. . The practice final exam is out of slightly more than 100 points. The real exam will be out of 100 points.. . You are welcome to turn in your answers file for the live practice exam on Canvas. This is NOT required. It’s there in case you would like to practice the full exam process, end-to-end.. https://umich.instructure.com/courses/547703/assignments/1778547. . The solutions for the live practice exam are available at:. https://lobster.eecs.umich.edu/exam-distribution/exams/eecs280f22practice-final/sample-solution.html. . Additional Practice Exams and Other Materials. Additional practice materials, including copies of old paper exams, are available on our Google Drive:. https://drive.google.com/drive/u/1/folders/14XNqjzS0GuJm8c8z7AfTTXq4JlRJqWwu. . Exam Interface:. When you open the exam, you should get a welcome pop-up. If you don't see this (on either the practice exam or real exam), it means something went wrong and the page hasn't loaded correctly. Let us know if this happens.. . The exam interface should look generally like this in your web browser. If it doesn’t, please let us know. (Especially if page elements like the “Answers File” button are misplaced, or if you didn't get the welcome popup mentioned above.). . Feedback/Issues. Please use the follow-ups below to report any bugs/issues or other feedback.. . FAQ:. . Q: Do I have to take the exam through my link?. A: Yes. Each student’s exam is randomized, and we keep a record of who was assigned each question. If a student takes the exam through the wrong link, their questions won’t match up and they won’t receive credit. Please do not share your link with anyone.. . Q: How can I ask questions during the exam?. A: You may ask questions on Piazza or join a Zoom call with staff. We're happy to answer questions about the questions, but we can't provide any information that assists in coming up with a solution.. . Q: Is the exam proctored? Do I need to join a zoom call or install proctoring software?. A: No, but staff are available on a zoom call linked from the exam page in case you have questions.. Troubleshooting:. . Q: What should I do if I open the exam and I don't see the ""popup"" with the honor code info where I click ""I understand""?. A: This most likely means one of the 3rd part libraries used by the site didn't load correctly from its CDN. This can happen due to an unreliable internet connection or restrictions by your ISP or internet provider. Try refreshing the page a few times to see if it loads correctly. As long as it loads correctly once, you're all set (the exam application doesn't need to contact a server at all once it's started). If you have issues, please join our zoom call and we can help!"|985|0|active|||4
lbguousi8hy1yf|Final Exam Mega Thread|"Hello everyone!. . To make your studying easier, we are going to compile references to all the questions that have been asked about the final. We will be updating this post regularly so come back and check this post when you have a question!. . Here is what we ask of the students:. 1. Use this post to see if it has been answered already. 2. If it hasn't been answered, post the question in a single piazza post WITH A SCREENSHOT OF THE QUESTION. Title the piazza post with the exact question number (ex : "" Fall 2019 Q1A "" ). 3. Explain why you are confused. It is easier for us to create an accurate explanation if you give us a specific topic to address rather than ""how do I do this"". . Happy studying!!. . Logistics . content - @3708, @3176, @4205, @4382study tips - @3816. . Live Practice Exam. 3.1 - @44803.2 - @4449, @45123.3 - @4489, @45125.3 - @44876.1 - @44858.1 - @4513. . Fall 2017. 1c - @4385. . Fall 2019. Q1A - @4400Q1B - @4402Q1C - @4501Q2C - @4404, @4459Q4C - @4486. . Final Review Worksheet. 2 - @43433 - @4494. . Chapter Exercises. 13 - @415314 - @4158. . Lab Solutions. Lab 8 - @4502, @4503, @4504Lab 9 - @4218Lab 11 - @4492"|691|1|active|||0
lbxxsphwdu73j|Final Grades|When will final grades be posted?|8|0|private|||0
lbxcexw4m6m389|Submission matches sample solution but i got a 0|AC22DF11-DE4E-464A-BD15-8F894AC0119E.jpeg. . . |7|0|private|||0
lbx0a9c2a2c5c|is final exam grading done alphabetical?|title, just worried if it hasn’t come out for me because my last name starts with a Z or if my JSON file did not upload correctly for some reason|8|0|private|||0
lbwt8dqq4522h7|Regrade request.|Hi instructors! I wonder when my regrade request will be responded? I submitted it in Dec. 17. Thanks!|7|0|private|||0
lbws3a3ccew4ya|Final exam|"While looking at the graded Final exam, I wondered why I did not get some of the points specifically for questions 8 and 9. It would be my pleasure if I can get a review for those questions. Also, I would like to know how to request the regrade for the final.. Question8:. . if(!node || !node -> next) {.   return true;. }. return ((isEven(node) && !isEven(node -> next)) || (!isEven(node) && isEven(node -> next))) && contains(node->next);. . Question9:. . if(emp -> subordinates.size() == 0) {.   return 0;. }. for(int i = 0; i < emp -> subordinates.size(); ++i) {.   return emp -> subordinates.size() + total_subordinate_contributions(emp -> subordinates[i]). }. "|8|0|private|||0
lbtsyxohnyz2fy|Regrade Request|Good afternoon, I submitted a regrade request yesterday, and I want to make sure it went through and I am also curious when I can see if any corrections were made. Do you know when those will be released?. Thanks!|8|0|private|you can email eecs280staff@umich.edu, they will be better suited to answer your questions||0
lbsmc8bviga1od|Different score on canvas|I recieve the graded score through email, but the final score on that page is different from what is uploaded on canvas. Is that a mistake or it's just fine?|8|0|private|Sry I saw the wrong thing, it hasn't been uploaded yet, my bad :D||0
lbsfwcmaaan7a8|resolved|resolved|5|0|private|resolved||0
lbs8r67m2p138q|Final Grade|I just calculated my final grade on eecs280.org and found that my final overall percent is 86.87%, largely due to the Project 3 and Midterm Exam, since I got Covid that time. And my grade is only 0.13% close to B+. I wonder if it can be rounded up, or there will be any opportunity for extra credits for me to make it up?|6|0|private|You can email eecs280staff@umich.edu for any grading concerns!||1
lbs5rvvprku6un|Parameter list|"Are required to use a variable name of ""[name]_in"" where name is the private member variable.Ex: Using favorites_in for a private member variable favorites?"|7|0|private|||0
lbs5ncwirrn3m1|grading question on final exam|"Hi I was looking over my exam and was wondering why my response for the Dynamic Memory section question 3.1 ""This does not create dynamically allocated player objects. It creates the players on the stack not the heap."" does not satisfy the rubric requirements for full points . Correctly identifies the issue is storing a pointer to a local object or stack object, either in the map or in the leader pointer (identifying one of these is sufficient for credit). Or, mentions that the object will die when it goes out of scope. Or mentions that the map or leader pointer will store dangling pointers."|4|0|private|||1
lbs5izpntm376q|Final- Question 5.2|What is wrong with this?. . . Should I have dereferenced item? Or was a range-based for loop just not allowed?|8|0|private|Yes, it should have been (*item).fix_list() or item->fix_list(). The range-based loop is 100% fine.. . For future reference, the auto& in the range-based for loop here indicates a reference. Thus, item is a reference to an element of the batch vector. In other words, item has type RNA_list* and hence needs to be dereferenced as indicated above : ). ||0
lbplmjwm1vq4en|Final Exam|When will we find out our final exam scores and final grades?|15|0|private|@4740||0
lbokwjdphmd5t5|Canvas Final Exam Submission|If we made two submissions to Canvas for the final exam before the time was up, does our most recent attempt get graded? I just wanted to confirm. Thanks!|11|0|private|Yes, we will take your most recent attempt.||0
lbo8gt4p55m2hv|Didn&#39;t take the final exam|I just sent an email to the eecs280 staff, but I did not take the exam today. I completely thought it was on Thursday from 10:30-12:30, but it was today.. . Please let me know as soon as soon as possible if there is anything I can do. My uniqname is hafoster|15|0|private|I'm glad to see you were able to submit your exam; marking as resolved.||0
lbo619uduow706|When are scores gonna be out?|When are scores gonna be out?|15|0|private|@4740||0
lbo4a0k7j5a30r|&#34;late&#34; submission on final|Hi,. . I turned in my paper at 3:34pm (it was the alternate exam time, due at 3:30pm) as I had trouble downloading and uploading the json. Canvas marked my submission as late. Will this be a problem?|12|0|private|As long as canvas accepted it you're fine.||0
lbo1lax38886rb|On question 6.2 (Processes, main() function), should we include return 0?|"On question 6.2, we need to write the main function to sort the Processes. I have that part, but should we omit the ""return 0""? I'm not sure if it wants main to be able to do things after that or not."|15|0|private|Just write the code needed to sort the vector. ||0
lbo1e0lhp5s1za|SOON||455|55|active|||3
lbo15in6znn3b5|Missed exam !!URGENT!!|I'm panicking because I accidentally missed the exam I just took it and took it in the two hours and didn't consult anyone I promise but I can't turn it in anymore please please please help me|20|0|private|Please email your exam to eecs280staff@umich.edu and explain the situation||1
lbo15hu424cih|5.1 question|For 5.1 it doesn't give any example or template to create a node so I'm a tad confused on what to do for the second and third line of boxes, if some clarification is allowed that wouldl be very helpful!|7|0|private|Everything you need is in the question. We cannot provide more insight, sorry!||0
lbo113d3nx94e|Delete linked lists|It says not to use delete in the function in the problem description but then in the code the comments say to delete a node and it doesn't say delete anywhere in the code block.|7|0|private|You can use it in the box where the comment says to use delete.||0
lbnxwpa666v4tf|final exam|When can we expect to get out grade back for the final?|10|0|private|Soon^TM||0
lbnxso74a8j4mm|Thank you so much for teaching this semester!!!|when can we receive our grade for final exam?. |15|0|private|Congrats on reaching the finish line! We will get back with scores soon. Enjoy Winter break :)||0
lbnxrkpqtkp2vo|Exam Time Submission|Hi! I submitted my answers for the final twice on canvas, once at 12:29pm and then once at 12:34pm. I had to change one of my answers after submitting at 12:29pm but my laptop was a little slow the whole time so that's why I ended up submitting the second time a little late. Will I get any points taken off for submitting twice with one different answer/submitting my second time a couple minutes late? |10|0|private|You're fine, it's only a few minutes late.||0
lbnxqm12dx46wm|Submitted on 12:30 Marked as Late|I submitted on exactly 12:30 not realizing it would mark as late on canvas. FWIW, my lobster exam was under 2 hours by the time I submitted there. . I hope my submission is accepted. I would really appreciate to get a response back soon since I am stressing out about this. Thank you so much.|9|0|private|As long as your submission was accepted on Canvas, this will not affect your grade.||1
lbnxqjfh6o96qd|Submitted Final exactly at 12:30 pm|. Canvas marks it as late, should I be concerned?. . Thanks.. |6|0|private|As long as your submission was accepted by canvas you’re okay.||0
lbnxqhzm3mz63c|Will we be able to see our graded finals?|Title.|10|0|private|Eventually, yes||0
lbnxpj2kjaw498|Is it ok if i&#39;m 5 minutes late?||9|0|private|As long as your submission was accepted by canvas you’re okay.||0
lbnxpft33xm4fk|Final Submission being marked as &#34;late&#34;|I submit my final exam right when it turns from 12:29 to 12:30, and my submission is being marked as late. I was wondering if this will affect my final grade. Thank you.|7|0|private|If your submission was accepted by Canvas, it will not affect your grade.||0
lbnxo6r4pb51fp|Submission of Final|I submitted my final exam a minute late because when I uploaded the file, I has to reload the page which caused a delay. Will this be an issue? Thanks!|9|0|private|If your submission was accepted by Canvas, there is no issue.||0
lbnxnoklnky9a|Accidental Comparison Operator|I know we just finished the exam and turned it in, but I just realized I accidentally used the comparison == instead of the assignment = in one of my answers. Will I be getting marked down for this?|9|0|private|||0
lbnxiqga4da67k|Just submitted Late on my 3rd submission for the final|Will this actually affect my grade if I had two earlier submissions that were on time? I submitted the third attempt at 12:30 also. Are you guys strict with submissions times?|11|0|private|As long as your submission was accepted by canvas you're okay.||0
lbnx5acto1ptm|Q 2.1 on Exam|Is an int considered an object or primitive type for our purposes?|12|0|private|Unfortunately we cannot answer this, please use your best judgment.||0
lbnwwagsbyj2x8|Undefined behavior and memory leaks|Does a memory leak constitute as undefined behavior? for question 2.1|12|0|private|Unfortunately we cannot answer this question. Use your best judgment.||0
lbnwqhmca624op|index_mp|A little confused on index_mp, if the current is >=, are we supposed to update it or only if it's >?. |12|0|private|It's only required that the item at `index_mp` has been bought >= the number of times any other item has been bought.||1
lbnwpxir8xo6l3|cerr vs cout|Hello, for 5.2 fix_list_batch, I am required to print an error message after an exception. Should I uses cerr or cout? Or just by my preference?|10|0|private|cout is fine||0
lbnwobix5t454m|Question 1.1 Maintaining mp_index invariant|In the buy function do we need to check if there are 0 ItemRecords and set mp_index to -1?. I think that it would be illogical to do so, but would I get points taken off if I did so anyway to cover all my bases since the question specifies that we must maintain the invariant?|10|0|private|Unfortunately, we cannot answer this question. Please use your best judgement based on the information provided.||0
lbnwnvpztjb769|question 4.1|What does it mean for something to not work? Would we say something would not work if it is not the best idea or generally avoided in practice?|9|0|private|"Pick one of the options if it would reasonably work. Only pick the last option of ""neither"" if neither would work at all."||0
lbnwn4pi3aa6xd|subordinates question|for james, would his subordinates vector only contain justin and julia? or would it also contain seb|9|0|private|Unfortunately, we cannot answer this question. Please use your best judgement with the information available to you.||0
lbnw1y148qt4et|Looking for clarification on exam question|"Hi I have a true/false exam question that reads "" All dangling pointers must be set to nullptr before they go out of scope to avoid a double delete on the previously freed object they still point to."". . And I was looking for some clarification on what it is asking.. . Is it saying in order to avoid a double delete you should set dangling pointers to null pointers . or. Is it saying the undefined behavior of a double delete will 100% happen if you don't set dangling pointers to nullptr. . I hope that makes sense, thank you"|12|0|private|Unfortunately we can't answer this question. Use your best judgment.||0
lbnw0zrtzs72k0|8.1 question|For question 8.1, would the supervisor also get a bonus if their position matches that of the position of all their subordinates that are getting a raise? So, would the root node also be affected if the positions match?. . Thank you|11|0|private|The inputted supervisor would not get the raise.||0
lbnvuiqbn1mg|Question 5|"How do you delete |W| when your allowed to use delete."|12|0|private|You are allowed to use new and delete where it is explicitly indicated by a comment.||0
lbnvsoa46jn3eh|What is the definition of a valid Employee|. . Can it points to a nullptr? Thanks!|11|0|private|This means that emp points to an Employee object and not a nullptr.||0
lbnvouez1gx5ta|Confirming that valid solution exists|Currently, I believe that this function could incorrectly return true if (a1.kind == favorite && a2.kind == favorite && a1.funRating < a2.funRating). However, I don't see how I can edit my implementation to fix this. Please confirm whether or not this is an error on my part.. . |12|0|private|I'm afraid we can't give any help in this scenario. Please use your best judgement based on the context of the question.. . To be clear, there is a correct solution to this problem.||1
lbnvnymzka56sr|exam recursion question|"for Recursion on Company Trees, in the grant subordinate question, if the inputted employees holds the position, would they not get a salary increase, as it says ""increases the salaries of the employees who work under them ""?"|12|0|private|The salary increase does not apply to the inputted employee.||0
lbnvl34iuz651a|Alternating|I am confused about what 7.1 defines as alternating, mostly because this example:. 'a' -> 'A' -> 'A' -> 'a'Is said to be NOT alternating. since a -> A, and A -> a, wouldn't this be considered alternating? Would it be possible to get extra explanation on how the problem defines this characteristic?Thank you,. |12|0|private|Alternating means you cannot have two uppercases next to each other and you cannot have two lowercases next to each other.||0
lbnvkhm46w52dq|Employee Recursion Question|For this question, does this mean that if we were to input the boss of everyone(the root of the tree) into the grant_bonus_to_subordinates, literally everyone would receive a bonus and not just the people working directly under the boss? |9|0|private|Unfortunately we can't directly answer this question. Please use your best judgement based on the reference material and problem description.||0
lbnvjdl48355ug|Can we assume that the &#34;using namespace std&#34; directive is included?|"I'm wondering if ""std::sort"" is necessary, as opposed to ""sort""."|10|0|private|Yes||0
lbnvfi7wnm21nf|Question 5|What does it mean by InvalidDatumException ?|13|0|private|That is the type of the exception you should throw when needed.||0
lbnvb2s2ywl5v3|6.2 Confusion on no loops|I see that I cannot use a loop for this question. I was wondering, what counts as a loop? Are for loops, while loops, and range-based for loops all not allowed? Also are iterators not allowed in this?. |13|0|private|All types of loops / recursion are prohibited in this question. Otherwise, follow the requirements listed in the three bullet points and use your best judgement.||1
lbnv6918kbn2fq|Question 5.1|"It says:. You may not call new or delete other than where already provided.. But then in a box the description is ""// delete |W| node and advance ptr to point to |U2|"". am I allowed to type delete in that box?"|13|0|private|You may use new or delete if you are told to by a comment.||0
lbnv46upfjj6s2|XCode started updating in the middle of exam and now I can&#39;t access anything|My XCode just suddenly crashed and says it can no longer open due to it updating. I'm frantic right now because it's a huge part of helping me work through each problem. Is there anything I can do? It won't even show up as an app on my computer anymore. |14|0|private|Lobster might be the best option here. https://lobster.eecs.umich.edu/. . You may also consider using an online C++ shell: https://cpp.sh/||0
lbnuyx50y4g3ks|rna question|for the question below, i noticed it says we are not allowed to call new/delete other than where it is already called for us.. . in the second large box (the one that is currently blank), the document says we should delete W. does mean we can use delete here?. . |13|0|private|Yes - you may use new/delete wherever we indicate to do so in comments.||0
lbnuwd1q7jy67y|quick question about question 1|. In one question it asks about the time complexity of this function. I wanted to clarity something. In the effects it says it adds an item unless it already exists. That implies that this function checks if the item is already in the list, right?|11|0|private|I'm afraid we can't answer this question. Please use your best judgement based on the given context.||1
lbnuvp3guup4tb|Question 5.1 Linked Lists|"The question states: You may not call new or delete other than where already provided. . And in the code the provided comments are :  // delete |W| node and advance ptr to point to |U2|. Does this mean I am allowed to used the delete keyword?"|10|0|private|Yes. Only use them when explicitly told to, like in that comment.||0
lbnuvj1czt36sq|Does using range based for loops count as creating an iterator?|Does using range based for loops count as creating an iterator?  Can we use them for question 5 on the exam?|11|0|private|Unfortunately we cannot answer this question. Please use your best judgement with the given context.||0
lbnuhrhl44i1sa|Question 5 on Final|For question 5 it says not to use new and delete except where explicitly provided. For the new keyword it was written in besides the blank, but for delete there is no provided area like that except for the comment that says the node should be deleting. Basically, does this mean I'm not supposed to type new or delete by myself or am I supposed to write it with my code. I have the Rna sequence question  for context.|16|0|private|"By ""explicitly provided"" we also mean sections where we indicate in a comment whether to use either one."||0
lbnugjrjnko3s|Final asks &#34;Which approach is most appropriate...&#34;|I know they both won't work (which is an option), but I also know that one would work in many cases. This is for the templates section of the final. I don't get a chance to explain myself on the final so I thought I should ask. Do I answer that neither would work just because it breaks sometimes? Or the one that is more appropriate?|15|0|private|I'm sorry, but I don't think we can answer this. Please use your best judgement based on the context of the question.||0
lbnu3oop8yk42s|Question on 2.1|On question 2.1, are memory leaks considered undefined behavior?|17|0|private|Unfortunately, we cannot answer this question. Please use your best judgment.||1
lbnu2peouaq50o|Question 5|Is the node constructor implemented anywhere for question 5? can we see it?|15|0|private|The only `Node` data you may use is that provided in the struct in the helper material.||1
lbnu2iwg3rl4p9|exam|Which approach is most appropriate for a container that stores several different kinds of vehicles represented by different classes, all of which have a member function travel() that may be implemented differently depending on the particular mode of travel for that kind vehicle?. . for this question, is it implied that all vehicles are derived from the same class?|14|0|private|I'm sorry, but we can't answer that question. Use your best judgement based on the question prompt.||0
lbntyds4qpg6j8|Question 2.2|The question reads:. True/False: Memory Errors. If a dynamic integer object was allocated with int * ptr = new int(3); then that dynamic integer is always leaked unless delete ptr; is used before ptr goes out of scope.. . Does this imply that another pointer is allowed to be declared and point at the integer?. For example: int * ptr2 = ptr;|15|0|private|Please use your best judgement based on the problem description. Unfortunately, we cannot offer advice about specific situations related to the question.||0
lbntt0pytuv4a3|2.2 Memory Errors|"> ### True/False: Memory Errors. >. > If a dynamic integer object was allocated with `int * ptr = new int(3);` then that dynamic integer is always leaked unless `delete ptr;` is used before `ptr` goes out of scope.. . What about a situation where `ptr` is stored in another variable that does not go out of scope, but `ptr` does? Is this situation included in ""`ptr` goes out of scope""?"|13|0|private|Please use your best judgement based on the problem description. Unfortunately, we cannot offer advice about specific situations related to the question.||0
lbntclr02fe74c|Sorry really quick, how much time do we get?||16|0|private|2 hours to complete and submit your exam to Canvas. Your exam must be submitted by 12:30.||0
lbnsodfb14f5um|Questions During Exam|Where is the link to join a zoom during the exam to ask questions. Also where is the thread we can ask questions on piazza?|370|0|active|There should be a zoom link on your exam if you'd like to speak with a member of course staff face to face, or you can feel free to make a post on Piazza||0
lbns9mu5puord|What do I do if I can&#39;t find the final exam link in my inbox anymore??||326|0|active|Email eecs280staff@umich.edu||0
lbnrofyq1g25ck|Live Practice exam 3.1|"In the lecture notes it states.. ""We cannot delete an individual element of an array. The lifetime of an array’s elements are tied to the lifetime of the array as a whole; they are born when the array as a whole is born and die when the array dies."" Why is is the answer then using a dead object when we cannot delete an object in the first place?. . . "|233|0|active|Sculptures are dynamically allocated, meaning the sculptures array is just a bunch of pointers to sculpture objects on the heap. If you simply delete the sculptures array, you lose track of all these objects on the heap. This means that deleting an individual element of the array is okay because it is accessing the object on the heap through pointers.. . Since we deleted the object that ptr was pointing to at the beginning and try to do ptr->get_value() we are using a dead object.||1
lbnqjvg8sox30i|what is the syntax of a range based for loop?|. . . . . . . . vector<int> vec(5); . . . . . for (int item : vec) {.   cout<<item<<endl;. }. is this an example of a range based for loop? if yes, what does the first variable stand for and the second variable stand for . . . . |140|0|active|i assume this is from lecture slides, but here it shows basically what's happening with iterators. . . to directly answer, yes, the first variable will represent each element that is in vec (which is a vector of ints you initialized in the first line) while you are looping through vec||1
lbnq5u18i9a6hn|what are non static variables and an example of them?|title|139|0|active|basically just local variables, or variables that are instantiated within your class.||0
lbnc97kmha43ow|Base cases|Hi, does anyone have any advice on how to determine a base case for any kind of recursive function? I'm not sure which cases to use besides node==nullptr. . Thanks.|144|0|active|I always just think of “what can’t the recursion cover”, treat it kind of like a induction proof if you’ve taken 203. Like for a binary search tree the root can’t be “left” or “right” so that is something that the recursion can’t cover which makes it a base case. ||0
lbn7uatpxp6655|5.1 Live Practice Exam|how do we know that item is const for the operator parameter?|130|0|active|You don't need to change the item, so it's best practice to mark it as const.||0
lbn7igjuou07nv|4.2 Final Practice Exam|why is it rng_first->prev->next for the second block?. . and why is it last->next = rng_first;?. . also why is rng_first->prev = last;?|112|1|active|think of a linked list that is doubly-ended, and doubly linked {1, 2, 3, 4}. and let's say i'm trying to move 2-3 to the back, so {1, 4, 2, 3}. . my rng_first is pointing at 2, my rng_last is pointing at 3, first is 1, last is 4. . 1. this if statement checks if there is a previous element before rng_first, which there is so this statement serves to link this previous element to the element after my rng_last. basically if i move my 2-3, my 1 needs to link to the 4 now. . 2. since we're moving this range to the back, our original last->next was a nullptr but needs to link up to our rng_first. basically the 4 now needs to point next to the 2 since there's new elements at the back. . 3. this is the same thing as the last statement, just that we need to link it the other way, we linked last to point next to rng_first, but we also need to link rng_first to previously point at last. basically the 2 now needs to point previously to the 4. . hope this wasn't too confusing||0
lbn6r7nurtu1tl|Live practice exam 3.3|. 1.is this a deep copy? we didn't pick any options for new paintings so I'm assuming it's not. . . for(int i = 0; i < 5; ++i) {.     paintings[i] = rhs.paintings[i];.   }. . 2.also why do we pick this option?. . for(size_t i=0; i < rhs.sculptures.size(); ++i) {.     sculptures.push_back(new Sculpture(*rhs.sculptures[i]));.   }. . . . 3. do we always return this* when it comes to implementing an overloaded assignment operator?. . 4. why don't we pick these options?. paintings = rhs.paintings;.  .   paintings = new Painting[5];. . for (int i = 0; i < 5; ++i) {.     paintings[i] = new Painting(rhs.paintings[i]);.   }|102|0|active|||0
lbn5wx8zknamk|lobster practice exam logistic question|can we have the live practice exam from lobster(solution and our own practice exam link), our graded midterm(also on lobster) all open at the same time as when we have the actual final exam open and are taking it?|127|3|active|Yes||0
lbn4jby4mhs70v|Dynamic Memory|When making a new array do you make a for loop and create new elements in that loop. Or do you make the new array using the new key word and then add the elements in it using a for loop. |95|0|active|For a dynamic array, you'd use the second approach. You're creating one dynamic array.||0
lbn4is7ah4f2ku|fall 2019 5a|The correct implementation for greatest_path was:. if (!root) { return 0; }. int left_sum = greatest_path(root->left) +root->datum;int right_sum = greatest_path(root->right) +root->datum;return max(left_sum, right_sum);. . but I implemented it as:. if (!root) { return 0; }. else {.   return root->datum + max(greatest_path(root->left), greatest_path(root->right));. }. . Is my implementation incorrect?|52|0|active|||0
lbn4hwc3p603j5|Apple gala - Fall 2019 practice exam|"For problem 1b (apples and fruits), what's the difference between saying ""Apple gala"" and saying ""Apple* gala = new Apple()""?. . I know when you say new it's made on the heap, but different constructors/destructors get called? . . Thanks a lot."|51|0|active|||0
lbn3tebrphs177|Live Practice Exam Question 2|I don't understand why the below solution is the case. Deleting a only deletes the value 32, correct? We still preserve the pointer (only now it's pointing to memory junk). If this is the case, what exactly does *a = *b do? I know *b evaluates 64, so my intuition was that a would now point to a non-dynamically allocated integer = 64. Any help would be appreciated!. . |61|0|active|||0
lbn3gzqwobq6cd|Final Exam F19: Question 4b|. . Why do we want to use the square brackets instead of .at() since files_in is a vector? Would it matter if I use files_in.at(i) instead of files_in[i]?|45|0|active|||0
lbn3g5gmmj51kb|Dynamic question|Is an array of pointers the same as an array of dynamically allocated pointers?. . If we call a destructor on either how would they be different?|89|0|active|Dynamically allocated pointers are a subset of pointers. It's completely possible that pointers reference something on the stack instead of the heap, so the two aren't necessarily equivalent.. . If a pointer is the last reference to a piece of dynamically allocated memory, then it should probably delete that memory when it's done using it (or in a destructor for the the struct/class that contains the pointer). However, if a pointer either references something on the stack (shouldn't be deleted because it isn't dynamically allocated) or if there's still some other reference to it (otherwise you'd be trying to work with freed memory, which is bad)m then you shouldn't delete it. It all depends on context.||0
lbn3bls148b6aq|2017 practice|For this function shouldn't we be adding a pointer to movie instead of a movie because this is an array of pointers? I'm really confused.. . |59|0|active|> shouldn't we be adding a pointer to movie instead of a movie because this is an array of pointers. . Correct, and you do. Calling `new` returns a pointer, so `new Movie(title, length)` is a pointer.. . For the first branch in the alternate solution, this is using the `operator=()` of `Movie` by dereferencing the existing `Movie`.||1
lbn36yc51vt5h5|array vs vector for deletion|Why can't we use a for loop to manually call delete on each element in an array if they were created manually, but that is the only way we can do it for vectors? Or am I missing something?|66|0|active|"If you are deleting a dynamically allocated array, all elements are contiguous, so you can just use ""delete[] <insert array name>;"" and be done with it.. . You should only be manually calling delete on each element of an array/vector if the container itself contains pointers to dynamically allocated memory. In that case, all of the memory isn't necessarily contiguous, and you can't just use delete[]. Instead, you'd have to manually go and delete every pointer to the memory."||0
lbn2novbrcx107|using vector on final exam?|What's up class, . . Are we allowed to use vectors in our answers for the final exam? . An example would be coverting a node linked list into a vector of nodes to allow for easier data manipulation. |69|0|active|> An example would be coverting a node linked list into a vector of nodes to allow for easier data manipulation.. . Probably not—the question should mention it. Take a look at [example problem 4.1](https://lobster.eecs.umich.edu/exam-distribution/exams/eecs280f22practice-final/sample-solution.html#question-d65969a0-4878-5990-9bf9-1fb8dedf514b): it explicitly states that. . > - You may **not** call any other functions as helpers.. . which would ban doing anything with `vector`s.||0
lbn2mdrfs1t382|Using dead object|. is it because it already deletes everything from sculptures and then tries to pop_back?|60|0|active|It's because ptr is a pointer located at sculptures[sculptures.size() - 1], then we delete the object referred to by the pointer at sculptures[sculptures.size() - 1] (Notice that this is the exact same pointer as before). Then at the end we try to get the value of ptr, but that's the object that we just deleted. So it's use of a dead object.||0
lbn0a8fvyfb7i4|Fall 19 exam qs|1iii) why is this false?. 3b) why do delete victim if we don't use the new keyword when declaring victim?. 3c) why do we do while(index != -1)? and why do we do index = first_out_of_order(); again in the while loop?. 4a) whenever it says implement a function call operator, is the syntax the return type operator() whatever type of parameter and the parameter it takes in?. 5ci) is this tree recursive because there’s more than one recursive call in one of the if/else statements?. 5cii) is this tail recursive because there’s only one function call in each of the if/else statements?|83|0|active|"1 iii) Static member functions are functions that can be called without an instance of the class it’s defined in. Here’s an example:. . . . results in the following output:. . . . Thus, there is not always an object for the this pointer to point to.. . 3b) when we remove an element, we are getting rid of the data that has been dynamically allocated in this data structure. So this should tip us off that we definitely need to delete something. In this case victim is storing a pointer to our target we’d like to destroy, so after we perform some operations on the elements before and after victim, we’d like to deallocate the memory there.. . 3c) we use index != -1 because we know that the first_out_of_order() function returns -1 when there is no element out of order. So we start by saying “hey what’s the index of the element out of order”. Then while (index != -1) is saying “while there still exists some element out of order in the container…” then we remove_index it. After we’ve removed, we want to check again and say ""hey is there still any element out of order here? so that we can decide whether to continue removing these indices or to break out of the loop.. . 4a) I’m not sure I entirely understand your question but it sounds like you’re asking if there’s a pattern for what the function () operator returns. It depends on the RME every time. Sometimes you’re trying to make a functor that returns some information about the parameters like a true or false if one is greater than the other for example, or sometimes like in the case of 4a, there’s something specific the RME told you to return after the operation.. . 5ci) yes, at least for our purposes, tree recursive means that there’s at least one control path in which two recursive calls are made.. . 5cii) Tail recursive does not exactly mean that there is only one recursive call. Tail recursion is when the single call is the last thing that the function does, and that the function does not need to remember anything from its call stack. Typically this means the final call is simply a line that is return recursiveCall();. It’s a little hard to explain on Piazza, but it’s relevant because the runtime can use memory more efficiently by reusing the same call stack for each recursive call. I would recommend taking a quick peak at Professor Beaumont’s lecture 20 slides here.You can also learn more about it in the course notes here: https://eecs280staff.github.io/notes/18_Recursion.html?highlight=tail%20recursive#tail-recursion. "||1
lbn00cg3slu6fw|Lab 7-Operator Overloading with Currency Exercise|why do we have to return the this* when we implement the US_Currency & US_Currency::operator+=(const US_Currency &rhs) operator for this class?. . Also in general how do we know when to explicitly write in our implementation to return the this*?. This is the solution:. . dollars += rhs.dollars;. cents += rhs.cents;. dollars += cents / 100;. cents = cents % 100;. return *this;|51|0|active|"The reason we do it in this case is because we want to allow chaining, which basically allows ""a += b += c"" to work. Returning *this allows us to evaluate ""b += c"" to a returnable value, let's call it val, so this can effectively turn into ""a += val"". If we don't return *this, then the result of ""b += c"" can't be easily saved and reused to add to a."||0
lbmzvlv0sdh1r3|why is hey printed in the output below?|". . . . . class Error {.   string msg;. public:.   Error(const string &s) : msg(s) { }.   const string &get_msg() { return msg; }. };. void goodbye() {. cout << ""goodbye called\n""; throw Error(""bye"");. cout << ""goodbye returns\n"";. }. void hello() {. cout << ""hello called\n"";. try { goodbye(); }. catch (const Error &e) { throw Error(""hey""); } cout << ""hello returns\n"";. }. int main() {.   try {. hello();.     cout << ""done\n"";.   }.   catch (const Error &e) {.     cout << e.get_msg();.     cout << endl;.   }.   catch (...) {.     cout << ""unknown error\n"";.   }. cout << ""main returns\n"";. }. . . . . Output:. . hello called. goodbye called. . . heymain returns. . . . "|62|0|active|"`main` calls `hello` which calls `goodbye`. `goodbye` runs `throw Error(""bye"");` which is caught in `hello` in the block `catch (const Error &e)`. This then throws a new error with `throw Error(""hey"");`. Finally, this is caught by main, which runs `cout "||0
lbmzme03q5r1pk|Final Practice Lobster Exam QS|For 1.3, how do we know which parameters to include for Minqueue operator+= function and which functions to call within it?|68|0|active|||0
lbmzlg6shuy71v|general questions for review|1. what does it mean to know how to apply inheritance to catching exceptions. 2. what are static vs non static member functions and an example of both?. 3. do we need to know about O(1) and O(n) when it comes to time complexities for the exam? and what are summaries of O(1) and O(n)/any other time complexities we need to know?. 4. I saw on the final exam objectives that we need to know how to convert iteration into recursion and recursion into iteration. how do we do that?. 5. will it be explicitly stated in the exam when we have to use iteration and when we have to use recursion? if it's not, how can we know when to use iteration and when to use recursion?. 6. what is an example of declaring a linked list iterator and an example of using the iterator?. 7. whats a function pointer and an example of it. 8. how much do we need to know about range based for loops for the final?. |54|1|active|||0
lbmzfzvyfr7dw|question abt constructors|say we have class A with subclass B. both A and B have default constructors. both A and B also have constructors that take a string as a parameter.. . when we initialize an object of type B with the constructor that takes in the string, what constructor from A is called?|43|0|active|Great question. If no specific A ctor is specified in your B string ctor, the default ctor for A will be called implicitly before your code in B string ctor runs. You can change this by explicitly calling A() in your B string ctor.||0
lbmysehfyje3nl|F2017 Exam Q2A|I have two clarifying questions relating to this answer:. . 1. In the cases where num_movies != MAX_MOVIES, why does the solution insert the added movie at index num_movies++? Shouldn't it be num_movies? If there are 3 movies already and we adding a 4th, that would be index 3, correct? And then we would want to increment the member variable num_movies after the fact, correct? This doesn't seem to be the case in the solution, so I'm curious what I am overlooking.. . 2. I'm also looking for some clarification for how dynamic memory is being managed in the second case. It the assignment operator being used to just change the Movie at index num_movies-1, rather than deleting the Movie in that position and creating a new one?. . |56|1|active|> Shouldn't it be num\_movies? If there are 3 movies already and we adding a 4th, that would be index 3, correct? And then we would want to increment the member variable num\_movies after the fact, correct?. . Correct. That's what putting `++` after the variable (postfix) [does](https://www.geeksforgeeks.org/pre-increment-and-post-increment-in-c/)! A prefix `++` (such as `++num_movies`) would increment `num_movies`, then return the newly-incremented variable.. . > Is the assignment operator being used to just change the Movie at index num\_movies-1, rather than deleting the Movie in that position and creating a _new_ one?. . Exactly. The second way is slightly more efficient as memory doesn't have to be deleted and then allocated again.||1
lbmylfqhant3gw|Corrected version of question 5.1 for the practice essay||89|1|active|Yep. We are in the process of pushing the fix (if we haven't already).||0
lbmyicq7swa18g|How to write time complexity?|Is time complexity denoted with capital O or a 0(zero)?. . exp:. O(n) or 0(n) ?|86|0|active|"Capital O.. Read O(n) as ""O of n"" or ""order n""."||0
lbmy9wpihlc1ae|Live practice exam question 3.2|. . . Is this a correct solution for question 3.2? |51|0|active|||0
lbmy5z7cyyqtd|Syntax for Recursive call outside Class|Hi,. . For question 8 on the live practice final, I was confused on how exactly to write a recursive call to a function when it's outside the class. For example for 8.2, I had the same answer but I wrote this instead.... if (!root){  return 0;}return root->DoubleTree<T>::Node::count(datum);. . ANSWER: return root->count(datum);. . Why are we allowed to just say count inside the function if we have to specify the class in the header?|42|0|active|||0
lbmxygyogiw4dz|Why are these passed by value?|. why are these passed by reference but. . these are not. What differentiates when you need to pass by reference?|52|0|active|I'd imagine that either works in these cases.. . If you want a more technical answer (this is stuff you'll learn in EECS 370 if you continue pursuing CS aka you don't need to know any of this right now), pointers on 64-bit systems are 8 bytes, and ints are 4 bytes. A big reason we like to pass by reference is to save time in copying objects (in addition to being able to see modifications to objects after the function is completed). However, with ints, it's really cheaper to use pass-by-value since you're copying half the bytes.||0
lbmxrk4j6bl39g|structural recursion|what's a summary of structural recursion and an example of how to write one?|53|0|active|Structural recursion makes its recursive call on some smaller part of the data -- it moves through the structure of whatever it's being used on. An example would be any of the BST functions that used recursion, such as calling find_max(node->left)... you're using the same function here on one half of the input data set.||0
lbmx7i55lua8g|fall 2017 question 1c|why would less_than() return true for the string hello being less than the string world?|52|0|active|"Two strings are compared by which strings comes first in the alphabet. ""Hello"" starts with a ""h"" and ""world"" starts with a ""w."" Since ""h"" comes before ""w"", ""hello"" is less than ""world."" "||0
lbmx6gm2ef46bo|Functor|why do we need a functor, in terms of relationship with predicates? |55|1|active|"All we need for a predicate is something that can be called on a single element - and a functor can fit this job perfectly! We could use other things such as function pointers, but functors are easier to manipulate than function pointers, so we use those. (There is another ""good"" way to make predicates, but those are not formally taught in the course. Look into lambda functions if you're curious, but know you're not expected to know them.)"||0
lbmwd50rjv7l6|Final Review Worksheet T/F c) question|why we cannot use a for loop to delete arr[i]? What will happen if I do that, and what does the 'undefined behavior' in the solution mean?|46|2|active|https://piazza.com/class/l7548zpfvr8yj/post/4575||0
lbmv5lxx5kd3ld|Pointers and dynamic memory|"In the following code, why does a not need to be initialized on the heap first? Also, what's the difference between calling the pointer a and calling it *a? Thanks!!. . int main() {. int *a;. int *b = new int(1);. a = b;. b = a;. cout << *a << "" "" << *b << endl;. delete a;. delete b; }"|55|0|active|Does an int need to be initialized? How about a string? Neither do, regardless of it being best practice or not. The same is true for a pointer. There is not difference just because it will eventually point to the heap. This pointer could be set to point to an int on the stack first, then later in the code be set to point to an int on the heap.. . As for the difference between 'a' and '*a' is that without the '*' we are would be printing the memory address stored by 'a'. By calling '*a' we follow that memory address and are printing the integer value stored there.. . Hopefully that clears up your question!||0
lbmuvkz7lf03ba|Dynamic memory question|Hi, in this code in the practice exam, which integer is actually being deleted off the heap at the end? Thanks.. . int main() {. int *a = new int(54);. *a = *new int(10);. cout << *a << endl;. delete a;. }|67|0|active|Let's call the dynamic integer in line 2 (original value of 54) int A. And we'll call the second dynamically declared int with value 10 int B. The integer pointer variable a gets a value in line one, the address to int A. In line two, since a is being dereferenced, the assignment is modifying the **value** of the int that a points to. So a still points to int A, but now int A's value is 10. So we have int A and int B whose values are both 10. When `delete A` is called, `a` points to int A, so int A is deleted.||0
lbmuutcqbcv4ka|Do we get extra time to submit final to Canvas?|For the midterm, there was extra time after the deadline (I think it went until like 9:10 or something) to submit to Canvas. Is that the case for the final, or do we need to submit things by 12:30 on the dot?|74|4|active|||0
lbmurcb743dsy|Comparator vs overloaded comparison operator|What's the purpose of making a comparator instead of overloading an operator for a class?|41|0|active|"Technically, you can do either. The main advantage of a comparator compared to a comparison operator is that a comparator can be more ""intuitive"" than a < b in some cases.. . For example, let's say we had a Duck class. What would a duck being ""greater than"" another duck actually mean? duck1 < duck2 really doesn't feel intuitive, because it could be comparing anything. Does it compare the names? The ages? The amount of food it ate that day? It could mean anything! That's why we'd use a comparator - we could make a DuckNameComparator or a DuckAgeComparator or whatever else we want. "||0
lbmuo4od41v2si|2017 2c|In this question, how do you know that an overloaded assignment operator isn't called but rather, a copy constructor is called? The = in that line is cnfusing me |44|0|active|"An assignment operator is called when two objects that have already been initialized are set equal to each other. In the question above, Quality_16 was initialized by the line ""Cinema Quality_16(Rave Cinema)"" but Michigan_theater was never initialized. Therefore, the equal sign represent the copy constructor being called to initialize Michigan_theatre. "||0
lbmub24n4blg9|live practice exam 8.1|May I ask if this is correct?|90|0|active|||0
lbmuaepietd5ed|2017 2a|For this question, isn't movies an array of pointers to a movie?. So wouldnt you have to do Movie new_mov=new Movie(title,length);. Movie* new_m_p=new_mov;. . and then this would be added to the array?. |31|0|active|||0
lbmu3o2d6fl35m|2017 2b|For this question I'm confused why we don't do movies=new Movie[Max_Movies] before the for loop and also why we don't do num_movies=other.num_movies? |30|0|active|||1
lbmtzj90vf43zr|difference between T and|is there any difference when I declare this in a function parameter. . (const T & item) vs. (const<T> & item)|46|0|active|The first is correct. The second will be a compiler error. `` comes after typenames that need a template type (like vector or BST for example), const is not a typename itself and this will cause an error.||0
lbmta57m5vv60v|practice|when we use dynamic memory, do we have to use pointer? Or we could also use int a = new int(1);?. I wonder how do we know if painting has dynamic memory.|47|0|active|paintings does not have dynamic memory because it is an array of Painting objects. If it has dynamic memory, it should be declared as follow:. . Painting *paintings[5];. then it is an array of pointers to Painting objects.||0
lbmt5qavzx729o|Live Pratice Final Q3.3|. . Hi,. . Wouldn't this append a new object instead of pointer inside the vector? Thanks!|47|0|active|"What ""new"" returns is a pointer to the newly-created object"||0
lbmt1vg2s243zg|Assignment Overload or Copy Constructor|. . I'm just making sure, Line 7 is using the assignment overload and line 6 is using the copy constructor correct? |35|0|active|Yes.||0
lbmsodi35gprh|Live Practice Exam 1.1: popMin()|Why does the answer key say that popMin()'s most efficient time complexity is O(1)? Wouldn't we need to shift all of the numbers over in the array so that the min is no longer in the array and each remaining element is shifted one to the left?|87|0|active|I think it's because technically all it's doing is decrementing the size variable to remove the first element of the array, since it's already stored in decreasing order. ||0
lbmsjtbwbnd3i8|Live Practice Q5.3 Followup|@4487 How do we know the default type of replacer is string? In the example for fusing Replacer it explicitly says <string> |37|0|active|||0
lbmsjrctmi32nz|destructor|would a loop like this work for the destructor?. Also i see that the solution uses size_t, when would we have to use size_t instead of just iterating using an int/double?|27|0|active|||0
lbmsa9iqe0g1xk|delete[]|When you create an array with objects:. like object *x = new array[10];. and push objects into the array like x.push(new object(...)). will the delete[] x works properly? clearing all elements along with the array itself? Or do we need to use a loop to free the objects inside the array?|51|0|active|If you're working with a dynamically allocated array, using delete[] will work properly and will clear all memory associated with the array (unless the array contains pointers to more dynamic memory, in which case you must loop).. . Also, just to clarify, you can't push_back new objects into an array. The only way you can modify an array is by indexing, or by using pointer arithmetic and dereferencing. Arrays don't have their own set of functions like vectors do.||0
lbmr4c9kgzi4gd|Do we need the pop_front and pop_back cases on problem 3b in the Fall 2019 Final Exam Solutions?||45|0|active|||0
lbmq8ztey2r61t|Is Lecture 23 from the notes going to be on the exam?|I don't remember going over Lecture 23 (Container of Pointers) in class|59|0|active|"@4227. ""The final exam focuses on material from lectures 11-22 (Container ADTs through the end of the course)."". I know it says ""end of the course"", but it does not cover 23 :)"||0
lbmpq9v8knt1cp|Fall 2019 Q 5c2|I had assumed this function would be linear recursive since it makes 1 recursive call each time it executes.. For a function to be tail recursive, I thought (probably incorrectly) that the recursive call had to be at the bottom of the function.. Can a function be tail recursive and have multiple recursive calls if all recursive calls are in return statements like in this one?. |65|0|active|Tail recursion is defined as one recursive call being the last thing we do in the function. Even though it looks like there are multiple recursive calls here, that is only because there are 3 different cases — only one of them is called each time.. . If we had something like return 1+potential_function(a,b) or return potential_function(a,b)+potential_function(c,d), that would not be tail recursive.||0
lbmpnssfdbi5v9|String comparisons|Does < with string return true if the first word comes before the second word in alphabetical order/?:. . cat<dog returns true?|42|0|active|Yes, it returns true, but I would suggest try on Lobster or your laptop first for these simple syntax questions before asking, for the sake of your own time||0
lbmpiwpmrwc2e4|How is this private variable being accessed?|For #4.1 (Linked Lists) of the practice exam, there is a line in the sample solution: Node *n2 = other.first. How is other.first being viewed here when Node first is a private member variable of another object?. . |48|1|active|While in the list class (which contains the node class) you can access private member variables from the same class, even if it is not the “this” object.||0
lbmoc8l4zv12wz|is composite recursion tree recursion?|. Is this one considered as tree recursion?|47|1|active|||0
lbmo1s73z3vdu|Syntax question|I just want to make sure, . . if(!node) means if node==nullptr. . . and while(node) means while node !=nullptr right?|46|0|active|Yes, nullptr will evaluate to 0 or False in a boolean statement, so !nullptr will evaluate to 1 or True.||0
lbmnm5u9hsilw|alternate way to implement push function in the live practice exam|Hi for this question, I use another way to implement the push function, but i am not sure if this way can insert the element successfully..Thank you!!!. . |39|0|active|||0
lbmnfspoemn6xl|operator()|should a functor's overloaded operator() always be declared as const? why or why not|45|0|active|||0
lbmndl1bp4r4wi|Helpful Outline for the Final Exam Review Recording|Hi everyone!. . The review session recording has been posted on the EECS 280 website.. . I also made an outline of the video if you are looking to see specific problems/topics (and if you are looking to save time, some parts of the video can be skipped): . . Video outline. True/False questions: 00:00:00Dynamic Memory: 00:17:15Linked Lists: 00:25:01Iterators & Maps: 00:45:19Extra BST/map example (inorder traversal / tree traversals): 00:56:15Recursion worksheet problem 1: 01:07:54Extra recursive examples (Fibonacci & Factorial functions): 01:21:08. This section may be helpful if you are looking for a deeper understanding of recursion. Additional topic - Memory Complexity: 01:39:43. Note: This topic will be covered in depth in EECS 281. For 280, it is safe to be familiar with the idea but it's not a major detail or focus of the class so don't worry too much about it. Recursion worksheet problem 2: 01:46:20-01:54:39. Skip to 02:11:16-02:16:39 to see more closely how the function works or if you are wondering why putting sway = 0 at the top of the function works. Function Pointers & Functors: 01:56:47General tips for the exam: 02:03:56-02:06:16Miscellaneous (questions related to tail recursion and more): 02:07:12More on the recursive sway problem (can skip this part): 02:16:45. An alternative solution to the problem was proposed and during this part of the video we were exploring if it would work (TL;DR - inconclusive if the alternative solution would work) . . |257|5|active|||2
lbmmqln9ndoit|Final Exam Review Session 12/12/22 Recording|Hi,. . I was wondering when/where the recording from last night's review session would be posted. Thanks!|68|0|active|"https://eecs280.org/, under Labs it says ""Final Exam Review"" and has a link to the recording on Zoom."||0
lbmmdh8gvn03ft|Question About Dynamic Memory Objects|If objects of the heap are not freed in the program, will they stay there in the heap after the program has been run several times?. . |43|0|active|"Not on most operating systems (""most"" includes Windows, macOS, Linux, Android, and iOS). Each program has its own heap, and these operating systems discard it entirely upon program exit. As such, while destructors won't be called, the heap will simply cease to exist along with any objects allocated on it. Even though memory won't be leaked after the program exits, it's still best practice to `delete` objects—what if you decided to refactor your program so that your code was called multiple times in the same process?. . Some operating systems designed for small microcontrollers use a shared heap, where all processes store data in a shared region of memory. This would be bad for desktop use—imagine if a bug in your program corrupted the memory of your IDE. Here, these OSes can't track what memory was used for which process, and memory *would* be leaked upon program exit."||0
lbmlat7zr707ok|Question on f2019 Qn 4a|"Why do you not need to add ""&"" before operator() in operator overloading function? "|50|0|active|It's not required because the & would mean that the integer value is returned by reference. This isn't necessary, but it would be a correct solution to have the ampersand.||0
lbml109q5uq3w8|What does datum ? 1 : 0 mean?|In the sample solution for 8.1, what does   return datum1 == datum ? 1 : 0; mean?. . . template<typename T>. int DoubleTree<T>::Node::count(T datum) const {. . . . if (datumCount == 0) { return 0; }. if (datumCount == 1) {.   return datum1 == datum ? 1 : 0;. }. if (datum < datum1) {.   return left->count(datum);. }. int count = 0;. if (datum2 <= datum) {.   count += right->count(data);. }. if (datum1 == datum) { ++count; }. if (datum2 == datum) { ++count; }. return count;. . . . }. |84|1|active|it evaluates datum == datum1. if true, it returns 1, else 0.||0
lbmjkhcbspu3tc|2017 Question 4a|Hi, why do we have to implement the overloaded != operator for IntRange::Iterator?  |33|0|active|||0
lbmj0k71mz838d|"Question on f
2019 2d"|Why do you not need to assign file_arr to nullptr after deleting it in the dtor?|44|0|active|By C++ rules, destructors may be called no more than once. As a result, `delete[] file_arr` will never be ran again, so there's no risk of a double-`delete`. Before learning about destructors in EECS 280, you may have been taught to zero-out pointers after `delete`ing them so if we accidentally `delete`d them again, nothing would happen (`delete`ing a `nullptr` does nothing). Because a destructor is guaranteed to not be called twice, `delete` won't be called twice, there's no need to set them to `nullptr`.||0
lbmi7ljbk956sq|4.2 Question|rng_last->next->prev = ;. . I do not really understand why the next and the previous wouldn't cancel one another out. I thought this would just equal rng_last|38|0|active|Yes, it would be equal to rng_last at first- but we're changing what it's set to. It's effectively the same as doing this:. . Node *next_node = rng_last->next;. next_node->prev = /*...*/. We don't care about what next_node->prev is set to - we're trying to change it! That might seem confusing - but it's not as unintuitive of an operation as it might seem.||0
lbmhf1z8e8y3on|Destructor Responsibility|In the Review Session on Sunday, the instructors said individual items in a container are responsible for destroying themselves after the program ends, rather than the container. However, in Linked List, only the list gets the Big Three and not the Node. Is this always true? Is there a way to distinguish between containers that need the Big Three and those that don't?|61|0|active|"I think the misunderstanding here is that ""container"" is a super broad term. That includes arrays or vectors, etc. When a container holds pointers to objects, it is not the container's responsibility to delete those objects because they don't ""own"" that memory. For instance, if I declare an `int x = new int(5)`, then I put that into a vector of integer pointers, it's not the vector's job to destroy the integer `x`. . . You make a good point that **some** containers such as linked lists and BSTs do have implementations involving memory that they own (Nodes), and they should delete the Nodes that they use under the hood to store the data.. . Does that make sense?. . For instance, on the Fall 2019 practice exam, there is a true/false question: ""A container of pointers is responsible for deleting memory associated with those pointers."" The answer is false, because they don't own the memory to which those pointers they're storing point to."||0
lbmg67okkl74gu|If we implement codes in a less efficient way...|If we implement codes in a less efficient way, but correct, will we be deducted points in the final exam?|45|0|active|If your code has correct output and satisfies all listed criteria for the question (including any explicitly stated complexities), then you will get full credit. ||0
lbmfe875wvg1e1|Question about Function pointers and Functors|Why is that passing in a threshold as a parameter not work in the class notes example? couldn't you just change the type to (*func)(int, int) and have it work?. . |42|0|active|> couldn't you just change the type to `(*func)(int, int)` and have it work?. . Sure, and then you'd need to add a parameter to `any_of` to pass to that extra parameter of the predicate. What if you'd like `greater` to take a 3rd parameter? You'd need to create a third copy of `any_of` with another extra parameter. Imagine if `any_of` was in the standard library (which [it is](https://cplusplus.com/reference/algorithm/any_of/)): should the C++ library authors create many copies of that function that have the number of parameters that any possible predicate would like? That's not really feasible, so functors lets you, the user of `any_of`, pass as much data to the predicate as you'd like.||0
lbmfbkkvs0b76q|recursive return|I am a bit confused about when should we return at each if statement and when should we return at the end of the function. Is there any guiding principles that we can follow? |33|0|active|||0
lbmdwjrz3ya71o|Exam links not working|neither one of my exam links are working, they both say page not found|12|0|private|This is normal, they will not work until the exam starts, which is tomorrow.||0
lbmd7ma9ygq37d|19|Does anyone know how to understand the i and v?. |73|0|active|Tree recursion is one subtype of recursion. Not all recursive functions are tree recursive. Tree recursive typically means the function calls itself more than once.. . ”A container” is extremely broad and can mean any container including basic types like arrays. A container can hold pointers without “owning” the data that these pointers point to. An array holding pointers is a good example. Just because an array holds pointers to ints doesn’t mean it should delete those integers. So this serves as a counter example. You probably misinterpreted the question to be referring specifically to more advanced data structures we’ve programmed like linked lists and BSTs, which own their data that you insert into them.||1
lbm9mnms1gzbk|When to include const &amp;|I know we include const & when we don't want to modify or copy something when it is being inputed into a function. Is there a specific rule though for when we should be including these beyond common sense? On the practice tests they sometimes don't include the const and/or the ref when I thought they would. If we include these things and the answer doesn't would this take off of our score (even if the value shouldn't be changed or copied) ? |64|0|active|Including a const reference in a function parameter can be a good idea in certain cases to avoid unnecessary copying of large objects. There is no specific rule for when to include a const reference, but using common sense and considering the performance and readability of your code can help you decide when to use it.. If the function is not going to modify the argument, it is generally a good idea to use a const reference to avoid copying the object.. I would not expect including a const reference parameter when the key does not to cause a loss of points if the parameter is not modified in the function.||0
lbm4qz4og9w269|Alternate Exam|Where can we apply for an alternate final exam? There's only midterm on eecs280.org. Thanks. |70|0|active|||0
lbm3p595z504qv|Fall 2019 Q2a|In question 2a, could we initialize file_arr in the member initializer list by writing file_arr(new File [100])? Also, would we need to specify the size of the array as capacity, or would 100 also work?. . |55|0|active|I chose to initialize file_arr in the member initialization list, and I think it would work just fine. I would chose to do so again on the real final since the question specifically stated that we should use the member initialization list when possible. I would suggest using capacity, it just makes a little more sense that you would only need to change the value initializing capacity in one place in the future.||0
lblvcue4rqn2gu|Static Variables inside functions|Hi, . . I was wondering if static variables can be initialized inside member function? If so, what would be their runtime?. . Thanks!|46|1|active|"This is a really good question and you got me curious, so I tried it with this function:. . void test() {.     static int a = 2;.     cout << a << ""\n"";.     a++;. }. . int main() {.   test(); //output: 2.   test(); //output: 3.   test(); //output: 4. }. The answer is that static function variables can be initialized - and are only initialized when created, and the initialization doesn't matter on subsequent calls.. I would still suggest avoiding static function variables - but this is their behavior. Looks like we both learned something today!"||0
lblrp76qg90qa|Can we use the auto keyword when coding for the final?|Given that there will be coding assignments where we will have to use for loops, would we be able to use the auto keyword instead of initiating an iterator or a pointer to traverse through a container?|63|0|active|Yes unless specified otherwise.||0
lblrlnqye215zw|2017 2b|I think this is more like a generic question: I don't know when should we use dynamically allocated memory if the question does not specifically tell me. In this question, I am a bit confused why movies are dynamically allocated, while cinema is not. |34|0|active|||0
lblr71jl2x23dq|More Practice Resources for the Final|If I have done all of the given practice resources, what other resources do you recommend to practice more problems?|52|2|active|||0
lblpgxq81eg3k9|time complexities|what do we need to know about time complexities for the exam?|58|0|active|||0
lblpaowvgvf22s|General final exam qs|1. how do you identify classes which need custom implementations of the big three?. 2.why are linked lists better than arrays/vectors for certain operations (removing from the top, middle)?. 3. what is an example of converting iteration into recursion and recursion into iteration?. 4. will it be explicitly stated in the exam when we have to use iteration and when we have to use recursion? if it's not, how can we know when to use iteration and when to use recursion?. 5. what is a summary of operator overloading and why is it necessary?. 6. what is a summary of the this pointer?. 7. what is an example of declaring a linked list iterator and an example of using the iterator?|66|0|active|1. If the class handles dynamic memory in any way, you want to use the big 3.. 2. The reason that linked lists are better at inserting/removing at arbitrary points is because there's no need for a linked list to be contiguous in memory - you don't have to shift things over if. . 5. Operator overloading simply allows you to use existing operators in a new way. For example, if we had a fraction class we'd want to be able to do something like frac1 + frac2, and not a function like add_fraction(frac1, frac2). 6. The this pointer refers to the object that called the function. So if we had a dog class and called dog1.bark(), the this pointer in the call to bark() is pointing to dog1.. 7. Look at both project 4 and the lecture on iterators.||0
lblp3awe3jpda|live exam 3.3|. why we can't directly use paintings = rhs.paintings to copy paitings just like what we do for vectors in lab 8?. Also, why don't we need to declare Paintings paitings[5] before the for loop?|50|1|active|||0
lbloxoxe4to6r8|Practice exam qs|Fall 2017 Exam QS:. 4a) what are the explanations for why each of these options are yes/no?. . Fall 2019 Exam QS:. what are the explanations for 1ii, 1iii, and 1v?. . 4a (F19 exam) whenever it says implement a function call operator, do we put the return type at the beginning of the function, then say operator, then store whatever it takes in?. . 5ci(F19 exam) is this tree recursive because there’s more than one recursive call in one line?. 5cii) is this tail recursive because there’s only one function call in each line?|47|0|active|||0
lbloty64rrn2m6|Fall 2017 Practice Exam 1c|. . . . . . Hello! I'm just a bit confused on how. . less_than(ducks, ducks + 1);. would evaluate to true. The Duck array ducks has only one element.|40|2|active|"I found it through office hours.. . Since ""ducks"" and ""ducks + 1"" are just a pointer addresses, ""ducks + 1"" will have a greater address than ""ducks""."||0
lblnjwwqtlh1xc|Final exam general questions|1. what is a pointer to a dynamic object and an example of it?. . 2. is one advantage of using a functor is that it allows us to use an object like a function.. . 3. do you only need the big three when dealing with dynamic memory(new/delete keyword)?. . 4. how do you apply inheritance to catching exceptions. . 5. what are static vs non static member functions and examples of both?. . 6. why are iterators necessary for traversing a linked list. . 7. what's a function pointer and an example of it. . 8. how do you identify time complexities of insert, find and remove for both Sorted and Unsorted Sets|100|0|active|. int * a = new int(5);int ** b = &a;. . YesThe big 3 is automatically implemented in most cases, but you have to implement them yourself when an object has a dynamically allocated member.Not sure what this is askinghttps://stackoverflow.com/questions/2285915/non-static-vs-static-function-and-variableYou need a way of accessing each node. Linked lists are not contiguous in memory so you don’t know the address of the next node. You don’t need an Iterator but it makes code easier to understand and more abstracted.Covered in lectureGoogle is your friend||0
lbln5vvymvr2mm|Time and Memory Complexity of Different Types of Recursion|I am trying to make a chart of the time and memory complexity for each type of recursion and I was wondering if what I have so far is correct? Also, what is the memory complexity of tree recursion?. |40|1|active|||0
lblmuh2mra83z0|F17 #4a)|Could Someone explain this question and why each are yes/no?|47|0|active|You need the != so you can compare when two iterators are pointing to the same thing. . You need the * operator so you can get the data an iterator points to.. You don't need a custom Big Three because there is nothing dynamically created by the programmer in the Iterator object.||0
lblltdz4arg3fe|practice exam 4b|I'm really confused as to whats going on here. Can someone explain?|32|1|active|||0
lbll4xn8i9v56c|Fall 2019 1B|Could someone explain both parts of Fall 2019 1B?|72|0|active|## Part 1. . The only instance of apple created is `Apple *fuji = new Apple();` This means the Apple object was created on the heap, and a pointer was created on the stack pointing to the Apple on the heap. When a derived class is created, the base class constructor is called first followed by the derived class constructor.. . Then we create a Fruit pointer  with `Fruit *eatme = fuji;`Part 1; This Fruit pointer `eatme` is created on the stack but points to the Apple object on the heap. We can delete the Apple object by calling `delete` on the fruit pointer which proceeds to call the derived class destructor followed by the base class destructor.. . ## Part 2:. . When an instance of the derived class is created, the base class constructor will be called followed by the derived class constructor. When class A is assigned to class B, the copy constructor of class A (left hand side of = sign) will be called. BUT if class A is a derived class, the base class constructor has to be called first. This is because you computer needs to know the what type of object the = is even assigning to. If you follow these rules you should be able to approach the correct answer.||1
lbli6xnt9i83xb|how can we compile and run a file with g&#43;&#43;?|title|57|0|active|A quick, simple answer to compile a single file:. g++ file.cpp -o file.exe. followed by this to run the file:. ./file.exe. Of course, replace file.cpp with the code you're compiling, and file.exe with the name of the executable (if -o is not specified, it'll either be a.out or a.exe depending on if you're on linux/windows respectively). . If you want more information, look at the link below posted by the instructor.||0
lblh1j6jd4w2l2|Linear Recursion|Would a function still be linear recursive if it has multiple return statements that call itself since only one return statement will be executed each time?|52|0|active|Yes, the only thing that matters is that the recursive call only happens once in the function.. This function for example would be linear recursive: (ignore what the function's purpose would be, as it really wouldn't be useful). . int doThing(int x) {.   if(x == 0) return x;.   else if(x < 1) return x + doThing(x+1);.   else if(x > 1) return x - doThing(x-1);. }. This would not, however:. . int doThing(int x) {.   if((x % 3) == 2) return x;.   return x + doThing(x+1) - doThing(x-1);. }||0
lblg49zgdna516|live practice exam answer key|Is there an answer key for the live practice? If there is, where do I find it? If not, do we just check our answers with the piazza posts linked to in the final exam mega thread?. Thanks!|131|0|active|https://lobster.eecs.umich.edu/exam-distribution/exams/eecs280f22practice-final/sample-solution.html||0
lblfctn6c422ux|compile error VS runtime error|I know an error is an error. But how do you know if it is a compile error or a runtime error? Any strategy? I searched in stackoverflow but cannot find a clear definition. Thanks!|37|1|active|Compile Error: Error that happens before the code is run (during compile time). Ex. Syntax Error. You know something is a compiler error if the code doesn't even run.. . Runtime Error: Errors that occur during runtime. These happen during the running of code. Ex. Bad Access or Segfault. You know its a runtime error if the code actually runs to some extent before the error is thrown.||0
lblf0cjlnmd1w2|Is there an alternate final exam if you are sick?|I'm not sure if I should have submitted an admin form for this, because the form does not list being sick as a reason for an alternate final. . . I woke up today very sick and I'm not sure if I will be well by the time of the exam. What should I do?|55|0|active|||0
lblero18co348n|tree|If we call the recursive function more than once with different parameters, then it's tree recursive. Is it correct?  . |43|0|active|If the recursive function can called multiple times in a single function call - yes, it is tree recursive. As combination will call itself twice in the single statement, it is tree recursive.||0
lblecxdt8ne1h0|19 p2|In the initializer list, should not we also do file_arr(new File[100]) ?. |31|0|active|I mean, technically in this case it'd make no difference if you specified it as 100 manually. It's just better practice to use the member variable - because it's much easier to change the 100 in a single place rather than 2 or more, especially if you maybe want to extend the code later on to maybe allow a custom value to be input.||0
lbldpvjjuu5716|live practice final 7.1|"can someone run me through how this function would run? like are print(n->left) and print(n->right) running simultaneously or does the function ""start again"" when it encounters the first print(n->left)?. . also, how does it go from printing 5 back to printing 7?. . "|36|1|active|"No, those functions would not be simultaneously ran (doing that is far beyond the scope of this class).. . Instead, it'll start at the root node, print out its value, then it'll ""restart"" on the left child node, printing that one's value, moving to the node left of that, and so on.. . The reason that 5 jumps back to 7 is because it finishes running on that subtree left of 6, so it'll move onto the subtree right of the 6, which has a 7."||0
lbld9ma8rcn1qz|Lab 8: Copy Constructor for SimpleString|. . For the Simple Strings copy constructor, I wrote this a little differently like this: . . Simple_String::SimpleString(const SimpleString &original).   :length(original.length), c_ptr(original.c_ptr).      { char str[original.length];.            strcpy(str, c_ptr);.       }. . Does this approach also work as well as the one below?. |30|0|active|No, you should be creating a dynamic array using 'new'.  The solution for the copy constructor calls the class' custom constructor which includes the dynamic allocation.||0
lblc9cjsapb12t|have the exam links been emailed?|I can't find mine anywhere in my trash or spam or inbox|48|0|active|They just got sent out, I think. I just got mine at 6:26 PM.||0
lblc31k2dez4pj|F17 Problem 5(a) Solution|What does node1 == node 2 mean in the sample solution?. . This is my understanding: whenever we have a node that reach nullptr faster than the other, we should return a false. Here's my implementation:. . bool same_structure(const Node *node1, const Node *node2){. .     // base case: if one of them reach null but not the other.     if (node1 == nullptr && node2 != nullptr){.         return false;.     }.     if (node1 != nullptr && node2 == nullptr){.         return false;.     }. .     // recursive step.     return (same_structure(node1->left, node2->left),.     same_structure(node1->right, node2->right));  . }. . Does my implementation works?. |36|1|active|Close, you also need to compare the contents of the node which can be done by doing node1 == node2||1
lblbzi97m0n399|F17 Problem 3(b)|Implement truncate() according to its RME. You MUST​ use find(), and you may assume it is implemented correctly.. // MODIFIES: *this. // EFFECTS: If 'item' is in the list, removes the first appearance of // 'item' and all elements that follow from the list. // EXAMPLE: If 'list' contains [2, 3, 1, 4, 1], then list.truncate(1) // modifies 'list' to contain [2, 3].. // If 'list' contains [2, 3, 1, 4, 1], then list.truncate(5) // does not change 'list'.. . My solution:. .     if (node){. .         // if there is only one element in the list, and is the item.         if (first == last){.             first = last = nullptr;.             delete node;.         }. .         else{.             // set the prev of node to be the last element in the list.             node->prev->next = nullptr;.             last = node->prev;.             while (node){.                 Node * victim = node; // create victim node to be deleted.                 node = node->next; // moving node ptr to next.                 delete victim;.             }.         }.     }Does my solution works? I don't quite understand this if block in the sample solution:. . . |34|0|active|It seems like you cut off a part of the actual solution. You should use find() to get a pointer to the node in question. The if statement is basically saying: if the node is not at the beginning of the list, then it should be the end of the list. Otherwise if node is at the front of the list, then there should be no list. This makes sense since we want to remove node plus everything that comes after it. You will still need to delete the rest of the list that was disconnected. In your solution if last is a nullptr you need to make first a nullptr too.||0
lblbdesundf3rx|Final Review Worksheet 1c|Can someone explain why the for loop would result in undefined behavior? . |42|0|active|The reason why the latter won't work - it doesn't delete that spot in memory. It actually attempts to call delete on the object stored in arr[i]. This would work in a case of an array of pointers (and would in fact be necessary if they're dynamically allocated pointers!) - but not if we had an array of, say, Ducks.||0
lblbbig66hc4zk|2017 Question 2b|Hi, in this copy constructor, why don't we need to include a pointer to the new array, like  movies(new movies[other.MAX_MOVIES])? |44|0|active|Because Movie​*​​​movies​[MAX_MOVIES] are by default when you construct a cinema.||0
lbla6e6041j1fd|Live Practice Exam Question 3.3|When dealing with dynamic arrays, why does using delete arr[i] cause undefined behavior, and why can we use this method for vectors, shown below? Furthermore, why do we need to loop twice, once using delete and once using pop.back()?. . |59|0|active|For this case - the reason why delete sculptures[i] is actually defined behavior has nothing to do with the fact it's a vector - it has to do with the fact that sculptures is a vector of structure pointers.. The delete sculptures[i] deletes the sculpture at that address, it doesn't do anything to the underlying vector at all.||0
lbla129dce22fj|Stack vs heap|Can someone offer an explanation as to the difference between the stack and the heap and what's stored in them? Thanks so much.|43|0|active|"So the short answer is: the stack is temporary storage for local/""automatic"" variables, functions during runtime, contiguous storage of data like arrays, etc. The heap is where you can place data and it will stay there until exactly when you say to delete it. This is where you can dynamically declare data.. That probably isn't that helpful on its own though. I would highly recommend the course lecture notes on this subject: https://eecs280staff.github.io/notes/13_Dynamic_Memory.html?highlight=stack%20heap"||0
lbl8xstkri17fz|Explanation for copy ctor calling base class&#39;s default ctor instead of copy ctor?|"Here is some code and its output:. . I'm wondering what the explanation would be for why the operation `B b2 = b1;` would call ""A ctor, B copy ctor"" instead of ""A copy ctor, B copy ctor""? Wouldn't you want the base class's copy ctor to be called when you copy an instance of the derived class?. . ![image.pngNaN](/redirect/s3?bucket=uploads&prefix=paste%2Fl7e8alqn6rj6u0%2F231c3b69f0bf43877a86942a2072de4f15e8008dc3b0983bf46e4c1d86d0d3f6%2Fimage.png). . Edit: I originally had a typo where I asked why the derived class's copy ctor wasn't being called. I meant why isn't the base class's copy ctor called."|40|1|active|It's because constructors must always call the constructors of their parent classes first. If you don't have any explicit call to a parent constructor, then C++ will insert a call to the default constructor for you.. . It's probably true that an explicit call to the parent's copy constructor would probably make sense if you were making these classes yourself. But here we haven't called any parent constructors at all, so the default parent constructor gets called by default.||0
lbl8d6e5u286v5|Time Complexity|How much about time complexity are we expected to know? |72|1|active|The depth of content that appears on lecture, lab, or projects is what we expect. Read through the resources we provide and you will be fine.||0
lbl87875iaa57o|Problem 2c|". . . What is the purpose of using an ""address-of"" operator here? Is it because the if statement are comparing the addresses of ""this"" and ""other""?. . "|42|0|active|"When you have a `&` in front of a variable **when you declare it**, that variable is called a ""reference variable"". It is not a pointer, but rather a local variable that basically gives the copied variable another name.. . For instance:. ```. int a = 5;. int &b = a;. a = 6;. court << b;. ``` . results in the output of 6.. . So in the content of function parameters, when you see `&` in front, that means the parameter is ""pass by reference"".. This means that the value is not copied from the function call to the parameter, but rather the parameter just ""points"" to the original entity passed into the function.. . For instance:. ```. void changeValue(int &a) {.     a++;. }. int main() {.     int x = 0;.     cout << x;.     changeValue(x);.     cout << x;. ```. Would result in the output 01. X's value is actually being changed from within the function."||1
lbl7i4gr92q5ml|Fall 2017 Practice Exam|I don't understand how the answer in the answer key for 5a gets the right answer in the Fall 2017 exam. Shouldn't there only be comparisons of the height/positions of nodes? Why is the base case node1 == node2? |60|0|active|The contents of the nodes should be the same too.||1
lbl6k5kefvb1va|Pure Virtual Functions|"If I indicate by placing ""=0"" at the end of declaration in just one virtual function, should I override every virtual functions then I can make an instance of the derived class? If I don't indicate by placing ""=0"" at the end of the base class, can I declare an instance of the base class?"|39|0|active|"I'm not entirely sure if you ""should"" have all of the functions be pure virtual, that might be a matter of best practice that I can't speak to. But you definitely do not *have* to. It may make sense to still have function(s) be non-pure-virtual if you know ahead of time that all of your derived classes will not need specific implementations of their own.. . As soon as at least one member function is pure virtual, the base class cannot have an instance declared. You are correct that you must override these pure virtual functions in the derived class to declare an instance of the derived class."||0
lbl4mlp2ut52a1|final exam objectives pt2|6) what do the default, compiler generated versions of the big three do?. . 7) is the advantage of using templates when defining the interface for a container that you can replace the template parameter with any other type such as int, double, string, etc?. . 8) how do you differentiate between the memory complexity of normal linear recursive function and a tail recursive function?. . 9) what is the definition of a predicate and a comparator and an example of each?. . 10) why should iterators not implement the big three, even though they reference to dynamic memory?. . 11) what are two differences between using a linked list and a vector?|73|0|active|6. The default version of the big 3 are that assignment/copy constructor will copy everything element by element, whereas the default destructor will simply do nothing other that destroy all member variables (which all three will work very well for - unless you're using dynamic memory).. . 7. Yes, the advantage of templates is that you can write one thing and it should work for any type that supports everything that you attempt to do.. . 8. Normal recursion will have to create a new stack frame for every call - whereas a tail recursive call can simply reuse the existing stack frame. (example: let's say we have a recursive factorial function. With normal recursion, calculating 4! would require at least 4 stack frames. With tail recursion, it would only need the one.) In big-O terms, normal recursion has O(n) memory complexity, whereas tail recursion has O(1).. . 9. A predicate simply tests a value for something. An example could be something that checks if a number is positive. A comparator is simply something that would do ordering like a < b.. . 10. Iterators do NOT need their own big three implementation because they do not manage dynamic memory themselves. Yes, they use a pointer to a dynamic object - they're not the ones that created that memory, though!. . 11. The biggest difference between a linked list and a vector is that linked lists do not require contiguous memory, though vectors do. This comes with the advantage that inserting an item in the middle of a list is trivial - though with the big disadvantage it's very difficult to find things outside of the beginning and end - which is why they're not actually that good of a data structure.||0
lbl4m6xuu2sqj|final exam objectives questions|1) what's the difference between a stack and a heap and what do they look like in memory?. . 2) what is RAII, and why is using RAII beneficial?. . 3) how do you develop code that makes use of RAII?. . 4) do you only need the big three when dealing with dynamic memory(new/delete keyword)?. . 5) why do destructors have to be marked as virtual in classes that make use of inheritance?. . 6) how are linked lists recursive data structures?|60|0|active|"1\. The stack is memory temporarily allocated for your local variables, functions, etc. Which is used and freed during runtime of your program. The amount of stack needed is determined at compile time. The heap is used to dynamically allocate amounts of memory that are not known for sure at compile time. Here is a link to the course lecture notes with diagrams and a lot more details: https://eecs280staff.github.io/notes/13\_Dynamic\_Memory.html?highlight=stack%20heap. . 2, 3. RAII stands for ""Resouce Acquisition Is Initialization"". Tbh idk what the means, but what's important about this philosophy is that it means an ADT should handle its own dynamic memory usage. If you create a data structure that has dynamic memory like a linked list, you should make a custom destructor so the programmer using your ADT doesn't have to manually delete stuff. You should also create the copy constructor, assignment operator, etc to manage all of the complexities of memory yourself.. . 4\. I would say ""the Big Three"" is a useful term to remind us of Ctor, Copy Ctor, and Destructor. But it's worth remembering that typically you'd also implement an assignment operator overload, since using the default = will only create a shallow copy (copying member variables like pointers without actually allocating new memory for the copies to separately live in).. . 5\. Destructors must be virtual in classes that are inherited from because sometimes you point to a derived class using a base class pointer. If you had a non-virtual base class destructor, then running `delete basePtr` would only call the base class dtor, and you might miss deleting dynamically stored members that are unique to the derived class.. . 6\. A ""recursive data structure"" refers to the mechanic that elements within it point to other elements. For a linked list, we have nodes that point to a `next` node. This mechanic also means that we can write recursive functions to perform operations on the data structure.. . Hopefully this answered all of your questions."||0
lbkv8r27sdg4m4|Final Review Worksheet 4 Set B tree_sway|"Hi all!I have a very different approach to this function. Obviously, there are many solutions, but I am still quite insecure about recursion and linked lists. Can someone look over my code please and explain what could be wrong and why? I appreciate it!. . Is the second solution in the official solution work sheet ""tail recursive"" ?Is (!node) equivalent to (node == nullptr) ?. . . . . A general question to clarify my understanding of BST traversal using recursion: What would be the order in which the nodes are visited in my code or in the second solution code?. . . Second solution code: . . . . Thank you so much for your insight!! :)"|70|0|active|If node->left == nullptr, then the sway should increase by 1, not decrease, because there would then be a sway toward the right side. Since the left node is a nullptr, recursively calling sway on the left node inside the if statement would instantly return 0, which is incorrect. Likewise, if node->right == nullptr, the sway should decrease by 1 because there would be a sway to the left. The recursive call in that if statement also just instantly returns 0.. . The second solution is not tail recursive because it makes more than one recursive call (tree recursive). Tree recursive functions can never be tail recursive because tail recursive functions require that no other work is done after the recursive call. Having to add sway on the last line also violates that rule.. . (!node) can be used in the place of (node == nullptr).||0
lbks7wih3cr4lh|Delete[]arr|Delete []arr deletes the address of the first element of the array, not the whole array, correct? |68|0|active|It deletes the whole array.||0
lbkm3db7gg96a8|Trees and Recursion Problem on Practice Exam|I have two questions about the final problem on the live practice exam:. . 1) On 8.1, why do we make recursive calls by calling left->count(datum) or right->count(datum)? Shouldn't left and right be taken as parameters to indicate the new root node? Similarly, why do we use root->count(datum) in 8.2?. 2) For 8.1, would this be a valid solution as well?:. template<typename T>. int DoubleTree<T>::Node::count(T datum) const {. if (datumCount == 0) {  return 0;}else if (datum == datum1) {  return 1;}else if (datumCount == 1) {  return 0;}else if (datumCount == 2 && datum == datum2 && datum == datum1) {  return 2 + right->count(datum);}else if (datumCount == 2 && datum == datum2) {  return 1 + right->count(datum);}else if (datumCount == 2 && datum < datum1) {  return left->count(datum);}else if (datumCount == 2 && datum > datum1 && datum < datum2) {  return 0;}else {  root = root->right;  return count(datum);}. }  |105|0|active|To answer question 1 - the reason you do node->left.count() is because count is a member function for the node itself. ||0
lbka07phch021b|Scope Resolution Operator|I was wondering if there are any general rules as to when a scope resolution operator should be used? I was confused about whether to use it in questions like 1.3 on the practice exam where I was implementing a function outside of the class. I was also confused about whether it was necessary to use the scope resolution operator in 8.2 when I accessed a member function of Node from outside of the Node struct.. . |69|0|active|The point of the :: operator is to let your compiler know what you're trying to do . In question 1.3, the compiler already knows what q is (MinQueue<T>), so you can call member functions by just using the . (and ->) operators. . Similarly, in question 8.2, the compiler already knows count(T datum) is a member of DoubleTree<T>, because you told it so in the function head. . If the compiler already knows what is going on, you don't need to tell it a second time.. ||1
lbk9uuv12tn4nj|Fall 2019 2C|Why are we able to access other.file_arr[i]? Isn't file_arr a private variable of Directory other so shouldn't we not be able to access the variable in a function that's not in Directory other.|68|0|active|This function is still part of the Dictionary class. private doesn't mean that the private variables of a particular specific object are protected, it just means that only objects/members of that particular class can access it. In this case, a Dictionary can access private members of another dictionary if it is passed in because they are both dictionaries.||0
lbk8q3uvce66rh|Fall 2019 4b Alternative Approach|For this question: . . . Does this approach below also work as well?. . int last_element = 0;. for (int::Iterator it = begin; it != end; it++) {.      last_element = func(*it);. }. return last_element;. . |46|0|active|Yes.||0
lbk8n8uxy2d3c6|Live Practice Q8.1|. I'm confused as what does children means here. So if datumCount == 1, it just ends there and won't have any node comes after, even one (child node)?. or does children means having two nodes at the same time?. . Sorry if I'm not explaining it clearly|40|0|active|From my understanding a node needs both datum1 and datum2 to be filled for there to be more sub-nodes. Logically this makes sense since from a data structure perspective there should be a reason to have a node after one that isn't already full (specifically one designed this way).||0
lbk8m9o1jgk3le|Deleting array and vector|What would the destructor be for deleting the vector? And what would be the difference between deleting an array? |41|0|active|if you are asking about what std::vector does, it does this: https://cplusplus.com/reference/vector/vector/~vector/. It is very similar to the Circular Buffer example from lab. It will need to delete the underlying array from the heap. Honestly std::vector may be more complicated than that but that is out of scope for the course.||0
lbk7nbhlry76x7|containers of pointers|Is it true that if we have a container of pointers to dynamically allocated object, it is our job to delete those memories? If we have a container of pointers to dynamically allocated object inside a class, so we need a destructor to delete all that memory? If we have that container in our main function, we need to call delete before our main returns?|45|0|active|When destroying an array of pointers - it will simply destroy the pointers themselves, which is not the same as destroying what those pointers are pointing to.||0
lbk6xex2qpm62n|Dangling pointer|I am still confused about dangling pointers- will our program run if they exist? and/or is the issue if we try to use a dangling pointer once their corresponding object has been deleted?|49|0|active|the issue with dangling pointers is that they still point to a place in memory where we deleted the object that used to be there, meaning if somewhere in the program we accidentally try to access this point in memory we will get undefined behavior. i'm pretty sure the program will run with a dangling pointer, but not if we try to access/deference it. this is why it's good practice to set pointers pointing to deleted memory as nullptr to ensure that we are not doing anything unintended.||0
lbk4z3o2lx033h|exam time|what time is the final on wednesday?|85|0|active|10:30am||0
lbk445x7nmu6r5|Why non-heap delete|Why is this an example of non-heap delete? I honestly don’t understand the meaning of &ptr. Is it saying that we are deleting the value 1, which ptr1 is pointing to..? |53|0|active|doing &ptr1 returns the address of the pointer, not the address of what the pointer is pointing to (which is what ptr1'S value is). Thus when you do delete &ptr1 it is attempting to delete something that exists on the stack, since the pointer (ptr1) itself exists on the stack (though it points to something on the heap)||0
lbk3z4iuyxfaq|deleting arrays/vectors|When we delete an array that’s dynamically allocated/ not dynamically allocated do we have to do delete [] nameofarray and then when we delete a vector that’s dynamically allocated/ not dynamically allocated do we just do delete nameofvector?|47|0|active|Yes. The destructor for std::vector takes care of cleaning its own private memory allocation. All you need to do is delete the object from the heap, its destructor will take care of the rest.||0
lbjy2zs71eu4u4|Fall 2019 Final 2a|I was wondering why the file_arr can't be initialized in the initializer list? I thought that it would be fine to create it in the initializer list using the code shown in my solution below, but the given solution initializes file_arr differently.. . |45|0|active|||0
lbjwv1d5v1j3e9|mock 17|  Delete Movies[num_movies – 1];.   Movies[num_movies – 1] = new Movie(title, length);. . equals:.   *Movies[num_movies – 1] = Movie(title, length);. . In the second version, we follow the arrow, reach the object, and change the object value directly . is it correct?|40|0|active|||0
lbjwobikqli78r|F19 5a|. . int greatest_path(const Node *root) {.  if(!root) {.   return 0;.  }.  int left_sum = greatest_path(root->left);.  int right_sum = greatest_path(root->right);.  return root->datum + max(left, right);. }. . Do these two implementations result in the same outputs?|33|0|active|||0
lbjwaluwyp54gg|Fall 2019 practice paper Q2b|Isn't C  also correct as the code didn't correctly copy in the dynamic memory|48|0|active|"@4525. I think it is correctly copied. If for example, file_arr[i] was ""Hello"", then you would be calling the custom constructor implemented in the File class that takes in a string name_in. Then you're setting new_files[i] which is a File object, equal to another File object. Also, I think that it's okay to assign a File to another File because we don't need to implement a deep copy for Files, since the shrink function is intended to edit the same Directory, meaning it's okay that the file_arr points to the same Files."||1
lbjvdt6qahw|Fall 2019 exam 4b -- Question about what function does|I am a bit confused on what the traverse function does and how it allows the next function, magnitude, to traverse over the vector. It seems that the function gets the first value, then iterates through a container and applies a function to each container value, storing that in result. Then, the function goes to the next value and does the same thing. Because result is getting replaced each time around in the while loop, won't traverse just return the result of the function applied to the last container value? How is the running sum calculated using traverse if it is only returning the last sum?. |45|0|active|"@4486. I had the same question, but I realized that when implementing the SquareSum function, the SquareSum class holds a sum private member variable. This means that it is updated everytime you call SquareSum on a new int N. Thus, when you traverse over the vector, each element is taken from the vector, squared, and then added to the sum. Thus, when you return the ""last value returned by a call to func"", the total squared sum is returned instead of the just the square sum on the last element of the container. Hope this helps."||0
lbjv60l8wjs1g5|question about fall19 practice exam T/F (1a)|Can someone explain why these answers are false?. ii) When the new keyword is used to create a dynamic object, the new operationevaluates to the value of that object.. iii) In C++, static member functions have access to the this pointer.. . Screen_Shot_2022-12-11_at_4.09.06_PM.png|37|0|active|ii) When we create an object on the heap, it evaluates to a pointer to that object. This slide from asynchronous lecture might help.. . . iii) Static member functions are not associated with any object. When called, they have no this pointer.. https://en.cppreference.com/w/cpp/language/static. ||0
lbjv4ezk4zh5g9|How does Range Based For Loop Iterate through a Map?|"Hi! For the following problem, I was confused why Hamilton is printed second after DeOrio instead of last, since it was created last. Do range-based for loops iterate through a map alphabetically or something? Or is there a different reason? . . . 3 - Iterators and Mapsi - SET A) What is the output of the following function?map<string,double> class_times;class_times[""DeOrio""] = 9;class_times[""Kamil""] = 12;class_times[""Juett""] = 13.5;class_times[""Mininger""] = 15;class_times[""Hamilton""] = 16;for(auto & elem : class_times){cout << elem.first << "" "";elem.second = 22;}cout << class_times[""Juett""] << endl;. . . ANSWER: Deorio Hamilton Juett Kamil Mininger 22"|43|0|active|As we are going through the code and adding key-value pairs to the class_times map, it needs to hold its representation invariant where each element of the map is sorted. Because this is a map of string key values, each element must be sorted alphabetically, because that's how strings are sorted. Meaning despite the order we add elements, whether it be Juett, DeOrio, Kamil or Kamil, Jamil, DeOrio, when we iterate through the map the elements will be sorted and therefore be printed in alphabetical order. Depending on how you iterate through the map (different traversal orders) the print order can differ, but with the range based for loop here it will print alphabetically||0
lbjtu9sgak32vi|Live Practice Exam 1.3|. For 1.3, why is MinQueue<T> &q passed as a parameter? I thought the function would be written similarly to an assignment operator, so I was using this instead|67|0|active|This would functionally work the same (except that you would need to write `this->push`, `(*this).push`, or simply omit it and write `push` as `this` is a pointer), but the problem specifies a restriction: . . > The operator should be implemented as a **non-member** function. . This means that `this` is not available, and you'd need to implement it accepting both the lhs and rhs as parameters.||0
lbjs87qm3iuo0|Final Exam Rooms|If we reserved a room to take the final, when will we get the information regarding where to go? Or should we go to the same room we took the midterm in?|56|1|active|||0
lbjo1wrkd8s6ym|Practice Final Exam, Q 3.3|How should the paintings array should be handled in the assignment operator? I thought that the elements paintings aren't on the heap so paintings = rhs.paintings suffices. Why is this wrong, and why is it necessary to iterate through this.paintings and rhs.paintings?|70|0|active|Answer is at @4512.. . Edit: Actually, I'm realizing that @4512 does not fully answer my question||1
lbjnqm7kls5s|Functors|. . For the last exercise on the bottom, can you also call count_if as follows?: . I know the question says to not call the functor and to just pass it, but syntactically is it valid? . . cout << count_if(vec.begin(), vec.end(), InRange(5, 15)); |58|1|active|I believe what you show should be ok (as long as count_if does not ask for a reference to the functor). I recommend you test it out in some online compiler like this one.||0
lbjnqgbuh4l4rz|would there be online office hour on Monday and Tuesday?|As title asks|51|0|active|||0
lbizndzkld35ix|Final Exam Review Wksheet|3a: do maps print out their keys alphabetically? . . what's the difference between a deep copy and a shallow copy? |61|0|active|Maps are order alphabetically. How they print things out is up to how you iterate through them.. The difference between a deep copy and a shallow copy is that with a deep copy two distinct copies of memory are created (if A is a copy of B, A and B have members (usually pointers) that point to different areas in memory but contain the same values. Shallow copies will have the members pointing to the same objects/data in memory.||0
lbiypczqhno1xi|Fall 2017 exam questions|2c) can someone explain the reasons for each of the options and why they are yes/no?. . 4a) what are the explanations for each of these being yes/no?. . more general questions:. -what are static vs non static member functions? . -can someone summarize functors and the this pointer?|59|0|active|||1
lbiyc5rtz3y67|Fall 2019 exam questions|4b:will we get points taken off if we do ++begin rather than begin++?. 5c i) is this tree recursive because there’s more than one recursive call in the else statement?. 5c ii) is this tail recursive because there’s only one recursive call in each if statement?|39|0|active|||1
lbiy45e1ypzu|2b and 2c Fall 2019 exam|what are the explanations for each of the options being right or wrong for these two questions?|74|1|active|For 2b:. A is not an error because the local variables are copied.. B is an error because the original files stored in new_files are left hanging in the heap and the pointer (file_arr) that was tracking that is not pointing to new memory. C is not an error because the forloop does properly go through new_files and copies memory over. D is an error because new_files is supposed to be an array of files but only 1 is created.. . For 2c:. A is an error because not all the other private variables are not copied over.. B is not an error because the delete keyword is used on file_arr. C is an error because capacity is not necessarily the same as other's capacity. D is not an error due to the first if statement.||2
lbixzpee7iq7kq|1ii, 1iii, 1v Fall 2019 exam|What are the the explanations for each of these? |30|0|active|||1
lbiu7m20k34dw|1.3 Practice Exam Question|For this question, how do we know that its MinQueue<T> instead of just T like in 5.1?  Screen_Shot_2022-12-10_at_10.59.29_PM.png. .  |82|0|active|5.1 has you writing a function which requires an overload of the parentheses operator. 1.3 is asking you to overload the += operator. These are different operators thus return different things. The += operator is supposed to do what the + operator should do, then do the = operator. Thus the end result should be what the = operator returns, which is typically the same type as the class that its a member of.. . Read this for more detail: https://en.cppreference.com/w/cpp/language/operators ||0
lbis27aoj507n3|Practice Final Paper Q8.1 and 2|With this question, I'm struggling to understand how you can call the function on a single node itself, and the node has left and right. How does it work to say right->count(datum) etc? As compared to the kind of List we worked with in P4?. . Also, why doesn't the answer key account for the case where datum>datum2, which is the very last case I wrote in my answer?|92|0|active|It does!. From the description: . If datumCount == 2, then datum1 and datum2 contain valid datums and datum1 <= datum2. . Basically if there are 2 datums, the datum2 will be greater than or equal to datum1. In the solution, if there are 2 datums, we compare to see if datum is . 1. Equal to datum1 and datum2. 2. Equal to just datum1. 3. Equal to just datum2. 4. Less than datum1. . Then we have that last return statement:  it's what's called an implicit else case --> basically means that its the only other possibility.. If cases 1, 2, 3, and 4 (above) are all not met, then it is called. . Take datum1 to be 1 and datum2 to be 2. Now lets say our datum is 3. Clearly, it doesn't pass any of the 4 cases because it is greater than datum1 -- which means it must be greater than datum2! (because datum2 will be greater than or equal to datum1, BUT NOTE it is not greater than or equal, we tested equal in case 3, and it failed, so we know the only option is >). (insert a ha moment here). . So what you did works fine I believe, but we just like writing as least code as possible :)||0
lbirp6tw8395a3|1iv FA 19 exam|Is this false because when you declare a class as another class's friend class you have access to their private member variables?|29|0|active|||1
lbirjwd3ylebj|live practice 8.1|Could someone please help run through what's going on in the solution, not really understanding it. |78|0|active|See @4522||0
lbiqqlfab601zj|switch statements|I noticed in the final review lab slides one of the examples from the functors section used a switch statement with different cases. Should we expect to see switch statements and be comfortable with them for the final exam?|41|0|active|I don't have an exact answer for you, but I would assume anything on the slides is fair game. Plus, its just switch statements, not too much too them!||0
lbiqnqi378r2by|Live Practice Final Q5.1|Please find attached my answer and the answer key. I don't understand the answer key. Why are there no consts? why aren't  we returning anything?|36|1|active|Your answer is partially correct, there should be a const and return statements, but we just are returning T, not const T& see @4450||0
lbiq2izdo7271s|live question 5.1|. Why this function does not need to return anything? Also, why the return type of this function is T instead of T& ?|84|2|active|We are working on resolving this issue. You are right, the function should have a return statement.||0
lbipzwgemzv10q|Solution:Exception Tracing 2 Lecture 22|For this question, why isn't the solution hello called, goodbye called, caught goodbye, main returns? I thought that when you catch the const goodbye error it goes to the main catch const goodbye error and prints out that cout statement and skips the rest of the code in hello. |20|0|active|Please add a screenshot of the question||0
lbipvf9hjbk1ir|Question 5.1 Live Practice Exam|Hi I was wondering if it my solution would be correct still if I added the first if statement to check if n1 or n2 is null?. Also why do we use the . operator to get the first for the node, but the arrow to get datum and next? Why could we not use the -> for all? |60|1|active|I mean yeah it works but it's not doing anything helpful. You already have matches set to 0 by default, and your while loop will never run if either is null so 0 will just be returned. Long and short -- no reason to have it.. . The . and -> operators do the exact same thing. Their only difference is that we use the dot operator when working with an object, and we use the arrow operator when working with a pointer to an object. The arrow operator essentially dereferences its pointer and then uses the dot operator on that dereferenced object.||0
lbioxou4b0g781|live practice 8.1|Why can we declare a new variable count inside a recursive function?. . . Is it legal to write function like this?. . if (datumCount == 0) {.   return 0;. } else if (datumCount == 1) {.   if (datum1 == datum) {.     return 1;.   } else {.     return 0;.   }. } else {.   if (datum < datum1) {.     return left->count(datum);.   } else if (datum == datum1) {.     if (datum2 > datum1) {.       return 1 + right->count(datum);.     } else {.       return 2 + right->count(datum);.     }   .   } else if (datum2 < datum) {.     return right->count(T datum);.   } else {.     retun 0;.   }. }|140|0|active|Though adding count makes the code simpler, you do not need to use it. Logically, your answer looks sound. However, I would suggest writing test cases because it is a lot easier to catch small bugs that are hard to see by looking at it. Feel free to use your P5 code to help you test!||1
lbioqso983t7lh|live practice exam question 3.2 &amp; 3.3|The reason why we need to delete sculptures is because the constructor of Sculpture doesn't use new keyword, therefore the destructor of Sculpture won't use delete keyword as well. So in the destructor of Gallery need to use delete keyword?. For paintings array, is it true that because paintings array is static member variable, so we don't need any new and delete keyword in the implementation of = operator?. . . . |124|0|active|The sculptures vector is not dynamically allocated, which is why we don't call delete on the sculpture object. However, they store dynamic objects, which is why we have to loop through all the elements and call delete in the Gallery deconstructor.. . Yes it is correct that paintings is a member variable. It is not a pointer nor does it contain pointers, thus it can't point to anything on the heap. This means it is impossible for the paintings array to be dynamic. Because dynamic memory is not used, we do not need to use new or delete.||2
lbinvqad9pf52m|Function Pointers|Juett mentioned in lecture that we do not use function pointers in EECS 280 -- do we still need to know them for the exam?|41|1|active|All content that appears in lecture is fair game for the exam.||0
lbime42bel83k6|Final Exam Review Q2: Another approach|Hello! I have two questions regarding Q2:. . 1) Does my code below make sense?. Node *iter = last;. while(k! = 0) {.     iter = iter -> prev;.     k--;. }. return item -> datum;. . 2) From the solution, why would we want to use the assert function? When would we use it?. . Thank you!|53|0|active|"Your solution makes sense to me. assert functions should be used to ensure the ""requires"" clause of the RME."||1
lbihkh1jigf5sl|Const keyword|. . What is the purpose of the extra const keyword at the end of the final line of code? |57|0|active|That const at the end of the function signature means that the function operator[] cannot modify any members of the DynamicIntArray class.. . Good reference: https://stackoverflow.com/questions/3141087/what-is-meant-with-const-at-end-of-function-declaration||0
lbigy33hcjv1nb|this pointer|What lectures contain the information about this pointer? I’m a little confused with the concept. |55|0|active|"""this"" is just a keyword in C++ that (when used inside a class) refers to the object the class is for. For example if I make a class called Triangle, and create a Triangle called ""A"", then in the member functions being called within Triangle ""A"" the ""this"" keyword refers to that exact object ""A"".. . A reference: https://www.tutorialspoint.com/cplusplus/cpp_this_pointer.htm"||1
lbifnmxbajq77i|Fall 2019 practice paper Q1c|why is it not b?. |92|0|active|The student answer is correct. An exception thrown in a catch block is not caught by other connected catches because it automatically stops the function where it is and goes to the function that called it (aka main).||1
lbid18h2bp24cp|ADT|I’m still a little confused about how to understand the definition of ADT. What would be an easy definition of ADT? |73|0|active|"I think that in the last few projects, Map, List, etc, are ADTsFor example, we know how to use Map, but we don't need to know how Map is implemented (well we actually do because we implemented our own).It's comparable to a car assembly line: each next person in the assembly doesn't need to know how the car was put together up until that point. They just need to focus on their part.For fun, I just decided to ask ChatGPT what an ADT is: ""ADT stands for abstract data type. It is a mathematical model for data types, where a data type is defined by its behavior (semantics) from the point of view of a user of the data, rather than by its implementation.In other words, an ADT is a way of specifying the behavior of a data type, without specifying how that data type is implemented. This allows for data types to be used and manipulated in a consistent way, regardless of how they are implemented.For example, a stack is an ADT that specifies the behavior of a last-in-first-out (LIFO) data structure. It defines operations for adding and removing elements from the stack, as well as for checking the size of the stack and checking whether it is empty. An implementation of a stack could be a linked list, an array, or any other data structure that satisfies the behavior specified by the stack ADT.In general, ADTs are used to provide a high-level, abstract view of data types, which allows them to be used and manipulated in a consistent and predictable way."""||0
lbi96cjq11k4gt|Final Review Worksheet Q4 Set B|May i ask if I could write in this way? Cuz it is not similar to the solution.. |4|0|private|||1
lbi8cdfwtw743n|Final Review Worksheet Q2 Linked List Rotate|Can I write my function like this? Would it receive full credits?. |5|0|private|||1
lbi71sjbut136p|final review worksheet questions|what is the logic behind the order in which the strings are printed here? . . |94|1|active|Alphabetical, as std::map is sorted by key||0
lbhyw0kar944sj|Final Review lab get_pi dynamic memory|Hi :)In the slides, it says this code was buggy. Can someone please explain what is wrong? It compiles fine in lobster.. . . |96|0|active|The variable pi is declared in the scope of the getPi function. When the getPi function ends, the lifetime of the pi variable ends as well. This will cause undefined behavior because we are returning the address to pi and storing it in needPi, but the pi variable dies after the function ends meaning the address needPi is pointing to is actually just a junk value.||0
lbhf9x0p7aq3sp|Practice final 3.3|In this question doesn't check mark three and four do the same thing? why do we need both checked off? |133|0|active|Just a quick clarification on the student answer...sculptures is a vector of pointers to DYNAMIC MEMORY. Whenever we have dynamic memory we have to delete it first before deleting the pointers as they are our only ties to the object in the heap.||0
lbhcwgs2kesom|Live Practice Q5.3|The sample solution is:. . void replaceAll(vector<string> &words, const string &target, const string &replacement) {. 	Replacer rep(target, replacement);. 	map(words.begin(), words.end(), rep, words.begin());. }. But I am wondering why the initiation did not specify the type; Here is what I wrote . . void replaceAll(vector<string> &words, const string &target, const string &replacement) {. 	Replacer<string> rep(target, replacement); //HERE IS THE ONLY DIFFERENCE. 	map(words.begin(), words.end(), rep, words.begin());. }. Thank you!|139|0|active|The difference between the sample solution and your code is that the sample solution uses the default template type for Replacer, which is string, while your code explicitly specifies the template type as string. Since the type is already specified in the Replacer class definition and the target and replacement strings are both of type string, the default template type is sufficient and there is no need to explicitly specify it.. In general, you only need to explicitly specify the template type if the Replacer class is not explicitly defined with a type, or if you want to use a different template type than the one specified in the class definition.||1
lbhb545y49b2yc|F19 Final Practice Exam 4c|. . double magnitude(const vector<int> &vec) {. 	SquareSum func;. 	int sum = traverse(vec.begin(), vec.end(), func);. 	return sqrt(sum);. }. I understand on the last line, we return the square root the sum to get the magnitude. But, before that, why is this able to square every element in the vector and then sum it?The SquareSum was implemented to return the square of whatever value is inputted.The traverse function, to my understanding, “returns the last value returned by a call to func”.. So if my vector was {1, 2, 3}, wouldn't the call to traverse on the second line just return 9, because it's calling SquareSum on the last value (3)?. . Quite lost on this one,. Thank you. |74|0|active|The traverse function will call the SquareSum function on each element in the vector in turn, accumulating the results in the sum variable. So in the example you gave, the call to traverse would square the first element (1), then square the second element (2), then square the third element (3), and then add all those squared values together to get the final result of 14. The call to sqrt at the end would then take the square root of that result to get the magnitude of the vector.||0
lbha4azao2r760|Practice test Q 6.1|Do we assume the node passed in is pointing to the first element of the List? . . . |78|0|active|"You can assume that index_of will only return the ""index of"" with relation to the first node passed in. Essentially you can assume the linked list starts with the node passed in initially.. . We will be more clear about this on the final."||1
lbh7ed8g2d16jv|Practice test Q 3.1|what is delete sculptures[sculptures.size() - 1]; doing? does it delete everything in the array or the last element?. . also why isnt the answer dereference null pointer?. . |195|2|active|This is a bit of a tricky question. We're deleting the last element only. If we were to delete an array, it would have needed to be dynamically allocated *as an array*, and when calling `delete`, we would have to use square brackets, like `delete[]`.. . Deleting a pointer to dynamic memory does **not** make it a nullptr; it just becomes a dead object. So using a dead object in any way other than assigning it to something new is what we refer to as use of a dead object.||1
lbh45c0yjfi7lc|Live practice exam solutions|Where are the solutions to the live practice exam?|55|0|active|@4227 Under “Live Practice Exam”||0
lbh30aqhbqh7cl|Testing Accommodations|Hello,. . I had my Testing Accommodations updated to 2x time instead of 1.5x time but I still have only 1.5x time on canvas.. I was wondering who I needed to get in contact with to fix it.. . attached is my official accommodation letter.|3|0|private|Please email the staff email ( eecs280staff@umich.edu ).||0
lbh0gswg5vhmy|Live practice vs real Final|How similar is the Live practice to the actual Final in terms of content. Will we be seeing the exact same type of problems in regards to list, linked list, tree recursion, a question on complexity etc... |72|3|active|the live practice exam will be very similar to the actual final. It will be the same types of problems and the same concepts. ||0
lbgzt7rgrpn7g1|Fall19 Final 2c|". I'm confused about why this does not properly implement deep copy of dynamic memory. ""new"" keyboard allocates an array of Files to dynamic memory and each elt of the array is copied over from the other file_arr. Is there something I'm missing?"|80|1|active|You should be using other.capacity to loop through. We haven't initialized capacity to anything at this point in the assignment operator. If the capacity of the directory in the other Directory is different, we may not copy over all the elements and we would have an incorrect directory size.||1
lbgvrfybx482r3|Live Practice Final 5.1|. This screenshot is from the answer key. Why does the operator() specify a return type of type T but nothing is returned inside the function?|138|3|active|||2
lbgvoud749840x|Live Practice Final 3.2|. In the solution, paintings[] is not deleted. Are we supposed to assume that arrays are not stored in dynamic memory? How do we know whether it is dynamically allocated without knowing the details of the constructor?. |133|0|active|Just an addition on the student answer, not all array pointers point to dynamic memory...they can point to a locally created array (but typically this is a bad design choice).||1
lbgviaze1zutm|Question about copy and assignment operators|Doing some review for the final and I'm on the topic of the big three. From my understanding, the assignment operator deletes all heap allocated items but all examples I've seen on the copy constructor do not. Why is this again? . . The only reason I could think of for one deleting all items is if the copy constructor is only for newly initialized objects and the assignment is for overwriting an already existing object but I'm not sure.. |52|0|active|> if the copy constructor is only for newly initialized objects and the assignment is for overwriting an already existing object but I'm not sure. . Exactly that. The copy constructor is just that: a constructor. Like other constructors, nothing has been allocated yet so there's nothing to delete.||0
lbgvaebw9st3fv|Lobster big three examples review|Are there any lobster examples that are related to the big three?|43|0|active|https://www.geeksforgeeks.org/rule-of-three-in-cpp/||0
lbfy8bjj7kc5ao|Question on range based for loop|Hello,I am wondering if we should always use an ampersand in the condition for a range-based for loop (for (const auto &kv: wordcounts) ), as well as in all the variable declarations that follows (const auto &word= kv.first). In project 5 (and also in general), are there cases where we may not want to use it in our range-based for loop condition?  How should we decide?Thank you. |42|0|active|The ampersand is for pass by reference. The reasons are similar to why you would/would not want to use it in a function parameter.. . . std::vector<MyClass> vec;. . for (auto x : vec). {.   // Value of x is copied from an item of vec.   // We can not change vec's items by changing x. }. . or. . for (auto &x : vec). {.   // x is a reference to an item of vec.   // We can change vec's items by changing x . }. or. . for (auto const &x : vec) // <-- see const keyword. {.   // x is a reference to an const item of vec.   // We can not change vec's items by changing x . }. To recap:. Choose auto x when you want to work with copies.Choose auto &x when you want to work with original items and may modify them.Choose auto const &x when you want to work with original items and will not modify them.. Usually, in most cases, including the & is a nice way to save time and memory when you may be working with larger objects. You may also want to use the third case when you just want to observe/read from objects but not write to them.||0
lbfx1j1o5g97gt|Fall 2019 final practice paper doubt|in this question, why is option 3 true? does it have to do with the range of the for loop or the way the items are deep copied?. . also, if we have File * a= new File[capacity], for the places in the heap memory that haven't been filled up with objects of type File, what exists there? |80|0|active|The for loop copies over the entire array (aka i < capacity). However, at this point we have not assigned capacity a value so it is creating and filling a randomly sized array (whatever capacity was randomly assigned to).||1
lbfwlj1n34g7gh|Fall 2019 practice paper Q1] b] ii|"The given output is. fruit ctor. apple ctor. fruit copy ctor. fruit ctor. apple copy ctor. apple dtor. fruit dtor. fruit dtor. apple dtor. fruit dtor. . i don't understand why line 4 is ""fruit ctor"" not ""fruit copy ctor""? Does a derived class's copy constructor by default call the base class's regular constructor and not it's copy constructor? And why would it do so?"|89|0|active|Since you are creating an Apple object, it is the Apple's copy constructor that gets called. The apple copy constructor is called because we are copying into an apple object. The fruit constructor is called and not the copy constructor because we do not explicitly call it. When an apple is created, the fruit constructor is implicitly called -- notice the fruit CONSTRUCTOR is called. We aren't creating a new Fruit, we are creating a new Apple so the apple copy constructor is called.||2
lbfwbswg4dp24c|Fall 2019 practice paper Q1] a) v|. . . . Q] A container of pointers is responsible for deleting memory associated with those pointers. T/F?. . I thought it would be true, but the answer key says false. Why so? If not the container, who would be responsible for deleting that memory?. . . |82|0|active|The programmer/destructor is. For example, in project 3, when you had a container of player pointers, you were responsible for deleting those pointers, not the vector.||0
lbfnymmzmj76cr|F17 Exam Question 1c last part|why is the last part to this question true? I assumed it would be a runtime error because ducks + 1 would be pointing to a memory address which is not a a part of the ducks array since this array only has one value, but I'm not sure if this is right. |87|0|active|If we tried dereferencing `ducks + 1`, then this would indeed be undefined behavior. But the `less_than` function is just comparing the *addresses*, not the actual values in or one past the array.||0
lbfndkbo6zdze|Final exam content|How much of the material from the previous exam will bleed into the final? things like polymorphism etc.|116|1|active|The exam will focus on content from after the midterm. You are expected to know stuff like polymorphism, but don't expect questions that attack that understanding.||0
lbej80dcshi2xc|Review worksheet|CEB29B84-617A-407E-9F7C-2ABFACE57273.jpeg. . is my answer correct for the rotate function from the review worksheet. |122|0|active|Your answer isn't quite correct. It looks like you are doing a lot more pointer reassignments than needed. The logic behind this question is you want to iterate from the back, moving then to the front as you go until you reach n. The solution can be found here (https://drive.google.com/drive/u/0/folders/14XNqjzS0GuJm8c8z7AfTTXq4JlRJqWwu).||0
lbduz8aku38606|Review Sessions &#43; Final Information|Sorry for the confusion, but I can't seem to find the final exam information.. When are where are the review sessions?. And are lectures 11-23 all we need to review?|84|1|active|There will be a review session with more info coming soon. The focus will be on the second half of lectures but as always the material is inherently cumulative. ||0
lbdqhea7ix57jl|Will we get an online practice exam for the final like we did with the midterm?||72|0|active|Yes, be on the lookout for more information coming soon™||0
lbdoqy4msjz2ry|Office hours the week of final|I'm posting this again because I never got an answer and this is kind of important in my opinion. Will there be office hours at all next week any time before the final?|77|6|active|OH at normal time and place Monday and Tuesday. Tuesday is the very last day of OH for the entire semester.||0
lbcn4jpandy24o|Final Review Worksheet Solution|. . Is it necessary to have the assert(finder) in this solution? I guess I don't fully see why it is needed since it's required that there are k + 1 elements in the list, so finder is never going to point to something null?|58|0|active|I mean I don't think not including assert(finder) would result in a loss of points, but I do think that it's important that we are being thorough with our error checking. Good practice, but not fundamentally necessary||0
lbbofzwo9ix4fx|Lab 9 Solution Question|. I'm confused generally with this solution and predicate/function pointers. I thought predicates were like function pointers, but in this, it seems like the predicate is being treated like a class/object? Also, when writing the definition for a predicate, is it always necessary to overload the () operator?|84|0|active|To add onto the student's response, when you implement any functor you'll definitely want to overload the operator(). This function call operator is what allows us to define the behavior of our functor and allows it to be called like a typical function would.||0
lbbhlbwlwll1e7|Final exam|. . The final will cover lectures 13 - 23 right? |173|0|active|The midterm exam covered up through Lecture 10 (polymorphism), so I believe the final exam will cover lectures 11-23. There should be an instructor post on Final Exam Logistics coming soon to confirm.||0
lbafprerlhn20h|Office hours week of Final|Will office hours still be held on Monday and Tuesday the week of the final?|72|1|active|Yes office hours will be held monday and tuesday. Tuesday is the very last day of OH for the entire semester.||0
lba9vyj8piy3g6|time conflict|Hi,. I'm so sorry that I just realized I had a conflict with my MATH 217 final. I just filled the form for alternate exam. I know I should have noticed this right at the beginning of this semester. Could you please give me another chance to take the alternate.. Thanks!|4|0|private|The exam team will get back to you on email soon! We typically don't answer course logistics questions on Piazza||0
lba6amqfxrx439|Function Pointers|Hello!. . I have written down in my notes from lecture 18 that function pointers are not going to be tested/we aren't required to know them for the final. This material is covered on slides 10-12, so I just wanted to check if that was a correct understanding? Thank you!|63|0|active|Function pointers are very likely not going to be featured - that same lecture taught us the better way to do what they do in C++.||0
lb9w4xdxm1y390|Question about Static vs dynamic arrays|I'm doing some review for the upcoming final and looking over some stuff regarding dynamic arrays.. . When would you actually use dynamic arrays over static ones? and how does having the size declared at runtime have any benefit?. From my understanding its basically just a regular array but on the heap.|78|0|active|When working specifically with array types the student answer is correct. I would say that in practice, the reason this is useful is that you can change the size of a container by deep-copying to a larger / smaller array, deleting the old one, and repointing to that new deep copy. This is essentially how `std::vector` works (which you'll learn about in 281 if you take that class).||0
lb9sn0z9ofm26a|Chapter 14 Warm up Excersize|Why would a[2] in the last line be using deleted memory? I understand that the pointer b got deleted, but why is a being counted as deleting the memory?|65|0|active|`b` has the same value as `a`, and since they're both pointers, that means they're both storing the same address and pointing to the same thing. Therefore, when you delete `b` (remember that `delete` means to delete **the object the pointer is pointing at**), you are deleting the thing that `a` was pointing at as well. Therefore, you can't try to access `a`'s elements after because it was deleted.||0
lb9nlbn2q5x15o|Chapter 13 Warm up Excersize|I have a question about this warm up problem.. . 1) Why is a Bird ctor (0) created? I don't understand where this would come from? Is this the default constructor? If so, where did we get the 0 and is it always a 0?|82|0|active|First line of your first screenshot, it is initializing a bird:. . ```cpp. Bird b_global(0);. ```||0
lb8geq0z6fbqp|Final Exam SI review session|When is the final exam SI review session? I don't see anything that it is this weekend, so would it be next weekend on the 11th?|102|3|active|This session (which as a reminder, is not officially part of the EECS 280 Class, but rather offered through Supplemental Instruction through ECAS) will be this coming Sunday. Details will be sent out shortly.||1
lb78firqfj66qa|Final|When will the practice/old exams be released for the final? |118|1|active|They are [here](https://drive.google.com/drive/folders/14XNqjzS0GuJm8c8z7AfTTXq4JlRJqWwu?usp=share_link).||0
lb2ntyoad6l4s2|Where do we find lab solutions?|Hi, . . I am reviewing my labs from the previous weeks, but am having trouble finding published solutions. Does anyone know where I could access lab solutions of the past labs. Thanks!|77|1|active|https://drive.google.com/drive/folders/1qtOknpnEHBkJIQexYLmvPNsfL-O9RbcS. . each lab folder should have worksheet solutions.||0
laypjxq320n3z3|Alternate Final Exam|Hi Professers,. . Sorry for posting this so late, but I just realized that the final exam time of this course completely overlapped with the final exam time of my math course. On the alternate exam survey I saw the due dat is Sep 23rd. Can I still request an alternate exam? If not, what should I do?. . Thanks|5|0|private|Please fill out the alternate exam request form: https://docs.google.com/forms/d/e/1FAIpQLSd5wPQt_SoyH6xAvWY1t1jNu2y8aIl3l_AcSl2-ejlnrA_N6g/viewform ||0
lat1bhim4glp5|Final Exam Study Tips|What are the best resources and advice do you have to prepare best for the upcoming final exam?|202|0|active|- Do all the practice exams, and for all the questions (the ones you get right or wrong) internalize why the answer is what it is. And write it down!. - Review all your project code to make sure you understand what it is doing and why it is organized that way. Talk with your partner about it to make sure you both understand what you have worked on (especially if you split work up).. - Review lecture notes and re-watch lectures when necessary to fill in gaps.. ||0
laix184fsv78r|Final Exam Content|What specific lectures, labs, and projects will be on the final exam?|231|1|active|Everything after the Midterm will be on the final||0
lah2pphzvt56a8|Content for final|Is the final cumulative or is it only everything after the midterm? Thanks. Apologies if this has been mentioned elsewhere.|142|0|active|You might find the instructors' response in @3176 helpful||0
l9y4ijfpgem3z0|Final Exam|Is the final exam cumulative or does it only cover content we learned past the midterm?|323|2|active|It is cumulative in the sense that we expect you to understand and be able to apply concepts from the first half, but the questions will be on topics from the second half. For example, we won’t directly ask you a question about pointers, but you need to know how they work to answer a question about linked lists.||0
l9vmyywu9z37da|When was the final exam time?|When was the final exam time? . Thanks!|9|0|private|Final ExamWed Dec 14 at 10:30am-12:30pmAlternate Final ExamWed Dec 14 at 1:30pm-3:30pm||0
l9qcnh51jzr29c|Error on question 3?|". extract(""I love coding projects!"", 7, 13) ---> ""I love cs!"". How is this possible? I put it in my ide and it came out to be coding"|12|0|private|"You are correct, assume the correct example is extract(""I love coding projects!"", 7, 13) ---> ""coding""."||0
l9nehhfmkpfjn|Class Pointers|If you're given a base class Drink and a derived class Lemonade. You can have a base class pointer that points to the derived class Lemonade. - Are you able to do it the other way around too?. Lemonade *ptr = &(object of drink);|68|1|active|"No, you cannot. This is called downcasting. . The compiler doesn't like this because what if you store another derived class from Drink (such as `Coke`) and then try to call a Lemonade-specific function? It'll break. . . The compiler will not let you do this unless you explicitly tell it ""hey I promise I won't ever have some other kind of drink in this Lemonade pointer"" (which we did not learn how to do in class)."||0
l8z18nq12zf26u|Final exam place|Can I take it anywhere like the midterm or I have to go to a specific location? I didn't see that in syllabus, maybe I miss it. |94|0|active|I believe it will be administered remotely similarly.||0
l7kup6mwti43b7|Final Alternate Exam Survey|The last question for the alternate exam survey asks you to submit your class schedule from Wolverine Access if you only have a class conflict, but I have an exam conflict with the final exam. So I was wondering what I should submit for it, because it won't let me submit the request form unless I fill it out. |129|0|active|I believe you should still put a screenshot of your class schedule. The elaboration will make it clear you have an exam at the same time. ||0
